// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Сервис мета информации",
    "title": "Metadata Service",
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/core/directories": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Get core directories",
        "operationId": "getCoreDirectories",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "created_at": {
                        "description": "ISO 8601 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-20T09:12:28.123Z"
                      },
                      "description": {
                        "type": "string",
                        "pattern": "^.{2,200}$",
                        "example": "Description"
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "some_directory"
                      },
                      "updated_at": {
                        "description": "ISO 8601 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-20T09:12:28.123Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Core directories not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Create new core directory",
        "operationId": "createCoreDirectory",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          },
          {
            "description": "Rule params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "acl": {
                  "type": "object"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "example": "directory1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_directory"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, gate already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/directories/{directory_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Get directory",
        "operationId": "getDirectory",
        "parameters": [
          {
            "type": "integer",
            "description": "Directory ID",
            "name": "directory_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_directory"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Directory not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Delete directory",
        "operationId": "deleteDirectory",
        "parameters": [
          {
            "type": "integer",
            "description": "Directory ID",
            "name": "directory_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Directory not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Update directory",
        "operationId": "updateDirectory",
        "parameters": [
          {
            "type": "integer",
            "description": "Directory ID",
            "name": "directory_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update directory params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "acl": {
                  "type": "object",
                  "x-nullable": true
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "Description"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "x-nullable": true,
                  "example": "directory1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_directory"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Directory not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
          "name": "datetime",
          "in": "query"
        }
      ]
    },
    "/core/nodes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get core nodes",
        "operationId": "getCoreNodes",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Date time as ISO 8601",
            "name": "datetime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "prev_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "created_at": {
                        "description": "ISO 8601 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-20T09:12:28.123Z"
                      },
                      "directory_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "has_children": {
                        "type": "boolean",
                        "x-nullable": true,
                        "x-omitempty": true,
                        "example": true
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "some_node"
                      },
                      "prev_id": {
                        "type": "integer",
                        "example": 0
                      },
                      "signal_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "updated_at": {
                        "description": "ISO 8601 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-20T09:12:28.123Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Core nodes not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Create new core node",
        "operationId": "createCoreNode",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          },
          {
            "description": "Create node params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "prev_id"
              ],
              "properties": {
                "acl": {
                  "type": "object"
                },
                "comment": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Comment"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "meta": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "meta"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "example": "node1"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 1
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_node"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, gate already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/nodes/tree": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get nodes tree with signals",
        "operationId": "getNodesTreeWithSignals",
        "parameters": [
          {
            "type": "string",
            "description": "Filter by node name",
            "name": "node_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by signal name",
            "name": "signal_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "full_name",
                "directory",
                "children",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "children": {
                  "$ref": "#/definitions/nodeWithSubtreeObject"
                },
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "created_at": {
                      "description": "ISO 8601 format",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-03-20T09:12:28.123Z"
                    },
                    "description": {
                      "type": "string",
                      "pattern": "^.{2,200}$",
                      "example": "Description"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "some_directory"
                    },
                    "updated_at": {
                      "description": "ISO 8601 format",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-03-20T09:12:28.123Z"
                    }
                  }
                },
                "full_name": {
                  "type": "string",
                  "example": "root/sub/leaf/node"
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_rule"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signals": {
                  "type": "object",
                  "required": [
                    "id",
                    "class",
                    "value_type",
                    "children",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "children": {
                      "$ref": "#/definitions/signalWithSubtreeObject"
                    },
                    "class": {
                      "type": "string",
                      "enum": [
                        "analog",
                        "discrete",
                        "virtual"
                      ],
                      "example": "analog"
                    },
                    "created_at": {
                      "description": "ISO 8601 format",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-03-20T09:12:28.123Z"
                    },
                    "external_id": {
                      "type": "integer",
                      "x-nullable": true,
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "unit": {
                      "description": "Measurement unit",
                      "type": "string",
                      "x-nullable": true,
                      "x-omitempty": true,
                      "example": "C"
                    },
                    "updated_at": {
                      "description": "ISO 8601 format",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-03-20T09:12:28.123Z"
                    },
                    "value_type": {
                      "description": "Value data type",
                      "type": "string",
                      "enum": [
                        "undefined",
                        "integer",
                        "real",
                        "boolean"
                      ],
                      "example": "real"
                    }
                  }
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Nothing found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/nodes/{node_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get node",
        "operationId": "getNode",
        "parameters": [
          {
            "type": "integer",
            "description": "Node ID",
            "name": "node_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_node"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Node not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Delete node",
        "operationId": "deleteNode",
        "parameters": [
          {
            "type": "integer",
            "description": "Node ID",
            "name": "node_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Node not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Update node",
        "operationId": "updateNode",
        "parameters": [
          {
            "type": "integer",
            "description": "Node ID",
            "name": "node_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update node params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "acl": {
                  "type": "object"
                },
                "comment": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "Comment"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "Description"
                },
                "directory_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                },
                "meta": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "meta"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "x-nullable": true,
                  "example": "node1"
                },
                "prev_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                },
                "signal_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_node"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Node not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
          "name": "datetime",
          "in": "query"
        }
      ]
    },
    "/core/nodes/{node_id}/children": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get node children",
        "operationId": "getNodeChildren",
        "parameters": [
          {
            "type": "integer",
            "description": "Node ID",
            "name": "node_id",
            "in": "path",
            "required": true
          },
          {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "default": 100,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "name": "offset",
            "in": "query"
          },
          {
            "enum": [
              "asc(id)",
              "desc(id)",
              "asc(created_at)",
              "desc(created_at)",
              "asc(updated_at)",
              "desc(updated_at)"
            ],
            "type": "string",
            "default": "asc(id)",
            "description": "Must contain string like asc(field) or desc(field)",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "prev_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "created_at": {
                        "description": "ISO 8601 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-20T09:12:28.123Z"
                      },
                      "directory_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "has_children": {
                        "type": "boolean",
                        "x-nullable": true,
                        "x-omitempty": true,
                        "example": true
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "some_node"
                      },
                      "prev_id": {
                        "type": "integer",
                        "example": 0
                      },
                      "signal_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "updated_at": {
                        "description": "ISO 8601 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-20T09:12:28.123Z"
                      }
                    }
                  }
                },
                "total": {
                  "type": "integer",
                  "example": 100
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Node not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/root_node": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get root node",
        "operationId": "getRootNode",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_node"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/signals": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Get core signals",
        "operationId": "getCoreSignals",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "class",
                      "value_type",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "class": {
                        "type": "string",
                        "enum": [
                          "analog",
                          "discrete",
                          "virtual"
                        ],
                        "example": "analog"
                      },
                      "created_at": {
                        "description": "ISO 8601 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-20T09:12:28.123Z"
                      },
                      "description": {
                        "type": "string",
                        "pattern": "^.{2,200}$",
                        "example": "Description"
                      },
                      "external_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "has_children": {
                        "type": "boolean",
                        "x-nullable": true,
                        "x-omitempty": true,
                        "example": true
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "some_signal"
                      },
                      "unit": {
                        "description": "Measurement unit",
                        "type": "string",
                        "x-nullable": true,
                        "x-omitempty": true,
                        "example": "C"
                      },
                      "updated_at": {
                        "description": "ISO 8601 format",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-20T09:12:28.123Z"
                      },
                      "value_type": {
                        "description": "Value data type",
                        "type": "string",
                        "enum": [
                          "undefined",
                          "integer",
                          "real",
                          "boolean"
                        ],
                        "example": "real"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Core signals not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Create new core signal",
        "operationId": "createCoreSignal",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          },
          {
            "description": "Create signal params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "class",
                "value_type"
              ],
              "properties": {
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "example": "analog"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "example": "some_signal"
                },
                "prev_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": 1
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "example": "real"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "class",
                "value_type",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "example": "analog"
                },
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_signal"
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "example": "real"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, signal already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/signals/classes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "signals",
          "core"
        ],
        "summary": "Get signals classes",
        "operationId": "getSignalsClasses",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/signals/value_types": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "signals",
          "core"
        ],
        "summary": "Get signals value types",
        "operationId": "getSignalsValueTypes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/signals/{signal_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Get signal",
        "operationId": "getSignal",
        "parameters": [
          {
            "type": "integer",
            "description": "Signal ID",
            "name": "signal_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "class",
                "value_type",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "example": "analog"
                },
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_signal"
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "example": "real"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Signal not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Delete signal",
        "operationId": "deleteSignal",
        "parameters": [
          {
            "type": "integer",
            "description": "Signal ID",
            "name": "signal_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Signal not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Update signal",
        "operationId": "updateSignal",
        "parameters": [
          {
            "type": "integer",
            "description": "Signal ID",
            "name": "signal_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update signal params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "acl": {
                  "type": "object",
                  "x-nullable": true
                },
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "x-nullable": true,
                  "example": "analog"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "x-nullable": true,
                  "example": "node1"
                },
                "prev_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "x-nullable": true,
                  "example": "real"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "class",
                "value_type",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "example": "analog"
                },
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_signal"
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "example": "real"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Signal not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
          "name": "datetime",
          "in": "query"
        }
      ]
    },
    "/ibas/gates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get all Gates",
        "operationId": "getIBAGates",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "comment": {
                        "description": "Комментарий",
                        "type": "string",
                        "example": "Some notes"
                      },
                      "name": {
                        "description": "Имя IBA Gate",
                        "type": "string",
                        "example": "p3apr3-pda-vc.p3.ia.nlmk"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Server gates not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Register new Gate",
        "operationId": "registerIBAGate",
        "parameters": [
          {
            "description": "IBA Gate object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "name": {
                  "description": "Имя IBA Gate",
                  "type": "string",
                  "example": "p3apr3-pda-vc.p3.ia.nlmk"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, gate already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/ibas/gates/${gate_name}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get Gate by name",
        "operationId": "getIBAGateByName",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "comment": {
                      "description": "Комментарий",
                      "type": "string",
                      "example": "Some notes"
                    },
                    "name": {
                      "description": "Имя IBA Gate",
                      "type": "string",
                      "example": "p3apr3-pda-vc.p3.ia.nlmk"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Gate not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Modify Gate Metadata",
        "operationId": "updateIBAGateMetadata",
        "parameters": [
          {
            "description": "IBA Gate Meta object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "name": {
                  "description": "Имя IBA Gate",
                  "type": "string",
                  "example": "p3apr3-pda-vc.p3.ia.nlmk"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA Gate name",
          "name": "gate_name",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/gates/${gate_name}/mnts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get all mnt for IBA Gates",
        "operationId": "getIBAGateMnts",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "mnt",
                      "iba_server_id"
                    ],
                    "properties": {
                      "comment": {
                        "description": "Комментарий",
                        "type": "string",
                        "example": "Some notes"
                      },
                      "iba_server_id": {
                        "description": "IBA сервер ID",
                        "type": "integer",
                        "example": 1
                      },
                      "mnt": {
                        "description": "mnt",
                        "type": "string",
                        "example": "dp-khx"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Register new mnt for IBA Gate",
        "operationId": "registerIBAGateMnt",
        "parameters": [
          {
            "description": "IBA Gate mnt object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "mnt",
                "iba_server_id"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "iba_server_id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "mnt": {
                  "description": "mnt",
                  "type": "string",
                  "example": "dp-khx"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "mnt",
                "iba_server_id"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "iba_server_id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "mnt": {
                  "description": "mnt",
                  "type": "string",
                  "example": "dp-khx"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA Gate name",
          "name": "gate_name",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/gates/${gate_name}/mnts/${mnt}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get mnt for IBA Gate",
        "operationId": "getIBAGateMnt",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "mnt",
                    "iba_server_id"
                  ],
                  "properties": {
                    "comment": {
                      "description": "Комментарий",
                      "type": "string",
                      "example": "Some notes"
                    },
                    "iba_server_id": {
                      "description": "IBA сервер ID",
                      "type": "integer",
                      "example": 1
                    },
                    "mnt": {
                      "description": "mnt",
                      "type": "string",
                      "example": "dp-khx"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Mnt for Gate not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Modify mnt Metadata",
        "operationId": "updateIBAGateMnt",
        "parameters": [
          {
            "description": "IBA GateMeta object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "iba_server_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "mnt",
                "iba_server_id"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "iba_server_id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "mnt": {
                  "description": "mnt",
                  "type": "string",
                  "example": "dp-khx"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA Gate name",
          "name": "gate_name",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "IBA Gate mnt",
          "name": "mnt",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/gates/${gate_name}/mnts/${mnt}/signals/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Return IBA signal mapping by gate and mountpoint",
        "operationId": "getIBAMappingByGateAndMount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "storage_id",
                      "module_number",
                      "number_in_module",
                      "is_digital"
                    ],
                    "properties": {
                      "is_digital": {
                        "type": "boolean",
                        "example": true
                      },
                      "module_number": {
                        "type": "integer",
                        "example": 1
                      },
                      "number_in_module": {
                        "type": "integer",
                        "example": 102
                      },
                      "storage_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA Gate",
          "name": "gate_name",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "IBA Mountpoint",
          "name": "mnt",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/servers/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get IBA Servers",
        "operationId": "getIBAServers",
        "parameters": [
          {
            "type": "string",
            "description": "Name mask for fuzzy search",
            "name": "name_mask",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "comment": {
                        "description": "Комментарий",
                        "type": "string",
                        "example": "Some notes"
                      },
                      "id": {
                        "description": "IBA сервер ID",
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "description": "Имя IBA Server",
                        "type": "string",
                        "example": "iba-server-name.nlmk"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Servers not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Register new Server",
        "operationId": "registerIBAServer",
        "parameters": [
          {
            "description": "IBA Server object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Имя IBA Server",
                  "type": "string",
                  "example": "iba-server-name.nlmk"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Имя IBA Server",
                  "type": "string",
                  "example": "iba-server-name.nlmk"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, server already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/ibas/servers/${iba_server_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get IBA Server by id",
        "operationId": "getIBAServer",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Имя IBA Server",
                  "type": "string",
                  "example": "iba-server-name.nlmk"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "description": "IBA Server ID",
          "name": "iba_server_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/servers/${iba_server_id}/signals": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Register new signal for IBA Server(batch mode)",
        "operationId": "registerSignal",
        "parameters": [
          {
            "description": "Signal object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "module_number",
                "number_in_module",
                "is_digital",
                "type"
              ],
              "properties": {
                "is_digital": {
                  "type": "boolean"
                },
                "module_number": {
                  "type": "integer"
                },
                "number_in_module": {
                  "type": "integer"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "bool",
                    "real",
                    "double",
                    "int"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "storage_id",
                "module_number",
                "number_in_module",
                "is_digital"
              ],
              "properties": {
                "is_digital": {
                  "type": "boolean",
                  "example": true
                },
                "module_number": {
                  "type": "integer",
                  "example": 1
                },
                "number_in_module": {
                  "type": "integer",
                  "example": 102
                },
                "storage_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "description": "IBA Server ID",
          "name": "iba_server_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/servers/${iba_server_id}/signals/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Return IBA signal mapping by server ID",
        "operationId": "getIBAMappingByServerID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "storage_id",
                      "module_number",
                      "number_in_module",
                      "is_digital"
                    ],
                    "properties": {
                      "is_digital": {
                        "type": "boolean",
                        "example": true
                      },
                      "module_number": {
                        "type": "integer",
                        "example": 1
                      },
                      "number_in_module": {
                        "type": "integer",
                        "example": 102
                      },
                      "storage_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "description": "IBA Server ID",
          "name": "iba_server_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/topics/${topic_name}/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Return IBA signal mapping by topic name",
        "operationId": "getIBAMappingByTopicName",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "storage_id",
                      "module_number",
                      "number_in_module",
                      "is_digital"
                    ],
                    "properties": {
                      "is_digital": {
                        "type": "boolean",
                        "example": true
                      },
                      "module_number": {
                        "type": "integer",
                        "example": 1
                      },
                      "number_in_module": {
                        "type": "integer",
                        "example": 102
                      },
                      "storage_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA topic name",
          "name": "topic_name",
          "in": "path",
          "required": true
        }
      ]
    },
    "/swagger.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "swagger"
        ],
        "summary": "Get swagger json",
        "operationId": "getSwaggerJSON",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "directoryObject": {
      "type": "object",
      "required": [
        "id",
        "name",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "description": {
          "type": "string",
          "pattern": "^.{2,200}$",
          "example": "Description"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "some_directory"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        }
      }
    },
    "nodeWithSubtreeObject": {
      "type": "object",
      "required": [
        "id",
        "name",
        "prev_id",
        "full_name",
        "directory",
        "children",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "children": {
          "$ref": "#/definitions/nodeWithSubtreeObject"
        },
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "directory": {
          "$ref": "#/definitions/directoryObject"
        },
        "full_name": {
          "type": "string",
          "example": "root/sub/leaf/node"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "some_rule"
        },
        "prev_id": {
          "type": "integer",
          "example": 0
        },
        "signals": {
          "$ref": "#/definitions/signalWithSubtreeObject"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        }
      }
    },
    "signalWithSubtreeObject": {
      "type": "object",
      "required": [
        "id",
        "class",
        "value_type",
        "children",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "children": {
          "$ref": "#/definitions/signalWithSubtreeObject"
        },
        "class": {
          "type": "string",
          "enum": [
            "analog",
            "discrete",
            "virtual"
          ],
          "example": "analog"
        },
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "external_id": {
          "type": "integer",
          "x-nullable": true,
          "example": 1
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "unit": {
          "description": "Measurement unit",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true,
          "example": "C"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "value_type": {
          "description": "Value data type",
          "type": "string",
          "enum": [
            "undefined",
            "integer",
            "real",
            "boolean"
          ],
          "example": "real"
        }
      }
    }
  },
  "tags": [
    {
      "name": "swagger"
    },
    {
      "name": "iba"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Сервис мета информации",
    "title": "Metadata Service",
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/core/directories": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Get core directories",
        "operationId": "getCoreDirectories",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Core directories not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Create new core directory",
        "operationId": "createCoreDirectory",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          },
          {
            "description": "Rule params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "acl": {
                  "type": "object"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "example": "directory1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_directory"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, gate already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/directories/{directory_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Get directory",
        "operationId": "getDirectory",
        "parameters": [
          {
            "type": "integer",
            "description": "Directory ID",
            "name": "directory_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_directory"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Directory not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Delete directory",
        "operationId": "deleteDirectory",
        "parameters": [
          {
            "type": "integer",
            "description": "Directory ID",
            "name": "directory_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Directory not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "directories"
        ],
        "summary": "Update directory",
        "operationId": "updateDirectory",
        "parameters": [
          {
            "type": "integer",
            "description": "Directory ID",
            "name": "directory_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update directory params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "acl": {
                  "type": "object",
                  "x-nullable": true
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "Description"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "x-nullable": true,
                  "example": "directory1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_directory"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Directory not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
          "name": "datetime",
          "in": "query"
        }
      ]
    },
    "/core/nodes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get core nodes",
        "operationId": "getCoreNodes",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Date time as ISO 8601",
            "name": "datetime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Core nodes not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Create new core node",
        "operationId": "createCoreNode",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          },
          {
            "description": "Create node params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "prev_id"
              ],
              "properties": {
                "acl": {
                  "type": "object"
                },
                "comment": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Comment"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "meta": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "meta"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "example": "node1"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 1
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_node"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, gate already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/nodes/tree": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get nodes tree with signals",
        "operationId": "getNodesTreeWithSignals",
        "parameters": [
          {
            "type": "string",
            "description": "Filter by node name",
            "name": "node_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by signal name",
            "name": "signal_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "full_name",
                "directory",
                "children",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "children": {
                  "$ref": "#/definitions/nodeWithSubtreeObject"
                },
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "created_at": {
                      "description": "ISO 8601 format",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-03-20T09:12:28.123Z"
                    },
                    "description": {
                      "type": "string",
                      "pattern": "^.{2,200}$",
                      "example": "Description"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "some_directory"
                    },
                    "updated_at": {
                      "description": "ISO 8601 format",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-03-20T09:12:28.123Z"
                    }
                  }
                },
                "full_name": {
                  "type": "string",
                  "example": "root/sub/leaf/node"
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_rule"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signals": {
                  "type": "object",
                  "required": [
                    "id",
                    "class",
                    "value_type",
                    "children",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "children": {
                      "$ref": "#/definitions/signalWithSubtreeObject"
                    },
                    "class": {
                      "type": "string",
                      "enum": [
                        "analog",
                        "discrete",
                        "virtual"
                      ],
                      "example": "analog"
                    },
                    "created_at": {
                      "description": "ISO 8601 format",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-03-20T09:12:28.123Z"
                    },
                    "external_id": {
                      "type": "integer",
                      "x-nullable": true,
                      "example": 1
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "unit": {
                      "description": "Measurement unit",
                      "type": "string",
                      "x-nullable": true,
                      "x-omitempty": true,
                      "example": "C"
                    },
                    "updated_at": {
                      "description": "ISO 8601 format",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-03-20T09:12:28.123Z"
                    },
                    "value_type": {
                      "description": "Value data type",
                      "type": "string",
                      "enum": [
                        "undefined",
                        "integer",
                        "real",
                        "boolean"
                      ],
                      "example": "real"
                    }
                  }
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Nothing found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/nodes/{node_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get node",
        "operationId": "getNode",
        "parameters": [
          {
            "type": "integer",
            "description": "Node ID",
            "name": "node_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_node"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Node not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Delete node",
        "operationId": "deleteNode",
        "parameters": [
          {
            "type": "integer",
            "description": "Node ID",
            "name": "node_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Node not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Update node",
        "operationId": "updateNode",
        "parameters": [
          {
            "type": "integer",
            "description": "Node ID",
            "name": "node_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update node params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "acl": {
                  "type": "object"
                },
                "comment": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "Comment"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "Description"
                },
                "directory_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                },
                "meta": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "meta"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "x-nullable": true,
                  "example": "node1"
                },
                "prev_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                },
                "signal_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_node"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Node not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
          "name": "datetime",
          "in": "query"
        }
      ]
    },
    "/core/nodes/{node_id}/children": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get node children",
        "operationId": "getNodeChildren",
        "parameters": [
          {
            "type": "integer",
            "description": "Node ID",
            "name": "node_id",
            "in": "path",
            "required": true
          },
          {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "default": 100,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "name": "offset",
            "in": "query"
          },
          {
            "enum": [
              "asc(id)",
              "desc(id)",
              "asc(created_at)",
              "desc(created_at)",
              "asc(updated_at)",
              "desc(updated_at)"
            ],
            "type": "string",
            "default": "asc(id)",
            "description": "Must contain string like asc(field) or desc(field)",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                },
                "total": {
                  "type": "integer",
                  "example": 100
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Node not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/root_node": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "nodes"
        ],
        "summary": "Get root node",
        "operationId": "getRootNode",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "prev_id",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "directory_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_node"
                },
                "prev_id": {
                  "type": "integer",
                  "example": 0
                },
                "signal_id": {
                  "type": "integer",
                  "example": 1
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/signals": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Get core signals",
        "operationId": "getCoreSignals",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Core signals not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Create new core signal",
        "operationId": "createCoreSignal",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
            "name": "datetime",
            "in": "query"
          },
          {
            "description": "Create signal params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "class",
                "value_type"
              ],
              "properties": {
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "example": "analog"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "example": "some_signal"
                },
                "prev_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": 1
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "example": "real"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "class",
                "value_type",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "example": "analog"
                },
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_signal"
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "example": "real"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, signal already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/signals/classes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "signals",
          "core"
        ],
        "summary": "Get signals classes",
        "operationId": "getSignalsClasses",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/signals/value_types": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "signals",
          "core"
        ],
        "summary": "Get signals value types",
        "operationId": "getSignalsValueTypes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/core/signals/{signal_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Get signal",
        "operationId": "getSignal",
        "parameters": [
          {
            "type": "integer",
            "description": "Signal ID",
            "name": "signal_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "class",
                "value_type",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "example": "analog"
                },
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_signal"
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "example": "real"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Signal not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Delete signal",
        "operationId": "deleteSignal",
        "parameters": [
          {
            "type": "integer",
            "description": "Signal ID",
            "name": "signal_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Signal not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "core",
          "signals"
        ],
        "summary": "Update signal",
        "operationId": "updateSignal",
        "parameters": [
          {
            "type": "integer",
            "description": "Signal ID",
            "name": "signal_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update signal params object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "acl": {
                  "type": "object",
                  "x-nullable": true
                },
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "x-nullable": true,
                  "example": "analog"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "x-nullable": true,
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_.]{2,50}$",
                  "x-nullable": true,
                  "example": "node1"
                },
                "prev_id": {
                  "type": "integer",
                  "x-nullable": true,
                  "example": 1
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "x-nullable": true,
                  "example": "real"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "class",
                "value_type",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "class": {
                  "type": "string",
                  "enum": [
                    "analog",
                    "discrete",
                    "virtual"
                  ],
                  "example": "analog"
                },
                "created_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "description": {
                  "type": "string",
                  "pattern": "^.{2,200}$",
                  "example": "Description"
                },
                "external_id": {
                  "type": "integer",
                  "example": 1
                },
                "has_children": {
                  "type": "boolean",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": true
                },
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "some_signal"
                },
                "unit": {
                  "description": "Measurement unit",
                  "type": "string",
                  "x-nullable": true,
                  "x-omitempty": true,
                  "example": "C"
                },
                "updated_at": {
                  "description": "ISO 8601 format",
                  "type": "string",
                  "format": "date-time",
                  "example": "2018-03-20T09:12:28.123Z"
                },
                "value_type": {
                  "description": "Value data type",
                  "type": "string",
                  "enum": [
                    "undefined",
                    "integer",
                    "real",
                    "boolean"
                  ],
                  "example": "real"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Signal not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "date-time",
          "description": "Datetime as ISO 8601, for example 2018-03-20T09:12:28.123",
          "name": "datetime",
          "in": "query"
        }
      ]
    },
    "/ibas/gates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get all Gates",
        "operationId": "getIBAGates",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Server gates not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Register new Gate",
        "operationId": "registerIBAGate",
        "parameters": [
          {
            "description": "IBA Gate object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "name": {
                  "description": "Имя IBA Gate",
                  "type": "string",
                  "example": "p3apr3-pda-vc.p3.ia.nlmk"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, gate already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/ibas/gates/${gate_name}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get Gate by name",
        "operationId": "getIBAGateByName",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "comment": {
                      "description": "Комментарий",
                      "type": "string",
                      "example": "Some notes"
                    },
                    "name": {
                      "description": "Имя IBA Gate",
                      "type": "string",
                      "example": "p3apr3-pda-vc.p3.ia.nlmk"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Gate not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Modify Gate Metadata",
        "operationId": "updateIBAGateMetadata",
        "parameters": [
          {
            "description": "IBA Gate Meta object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "name": {
                  "description": "Имя IBA Gate",
                  "type": "string",
                  "example": "p3apr3-pda-vc.p3.ia.nlmk"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA Gate name",
          "name": "gate_name",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/gates/${gate_name}/mnts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get all mnt for IBA Gates",
        "operationId": "getIBAGateMnts",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Register new mnt for IBA Gate",
        "operationId": "registerIBAGateMnt",
        "parameters": [
          {
            "description": "IBA Gate mnt object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "mnt",
                "iba_server_id"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "iba_server_id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "mnt": {
                  "description": "mnt",
                  "type": "string",
                  "example": "dp-khx"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "mnt",
                "iba_server_id"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "iba_server_id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "mnt": {
                  "description": "mnt",
                  "type": "string",
                  "example": "dp-khx"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA Gate name",
          "name": "gate_name",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/gates/${gate_name}/mnts/${mnt}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get mnt for IBA Gate",
        "operationId": "getIBAGateMnt",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "mnt",
                    "iba_server_id"
                  ],
                  "properties": {
                    "comment": {
                      "description": "Комментарий",
                      "type": "string",
                      "example": "Some notes"
                    },
                    "iba_server_id": {
                      "description": "IBA сервер ID",
                      "type": "integer",
                      "example": 1
                    },
                    "mnt": {
                      "description": "mnt",
                      "type": "string",
                      "example": "dp-khx"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Mnt for Gate not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Modify mnt Metadata",
        "operationId": "updateIBAGateMnt",
        "parameters": [
          {
            "description": "IBA GateMeta object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "iba_server_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "mnt",
                "iba_server_id"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "iba_server_id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "mnt": {
                  "description": "mnt",
                  "type": "string",
                  "example": "dp-khx"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA Gate name",
          "name": "gate_name",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "IBA Gate mnt",
          "name": "mnt",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/gates/${gate_name}/mnts/${mnt}/signals/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Return IBA signal mapping by gate and mountpoint",
        "operationId": "getIBAMappingByGateAndMount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA Gate",
          "name": "gate_name",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "IBA Mountpoint",
          "name": "mnt",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/servers/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get IBA Servers",
        "operationId": "getIBAServers",
        "parameters": [
          {
            "type": "string",
            "description": "Name mask for fuzzy search",
            "name": "name_mask",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Servers not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Register new Server",
        "operationId": "registerIBAServer",
        "parameters": [
          {
            "description": "IBA Server object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Имя IBA Server",
                  "type": "string",
                  "example": "iba-server-name.nlmk"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Имя IBA Server",
                  "type": "string",
                  "example": "iba-server-name.nlmk"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "409": {
            "description": "Conflict, server already registered",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    },
    "/ibas/servers/${iba_server_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Get IBA Server by id",
        "operationId": "getIBAServer",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "comment": {
                  "description": "Комментарий",
                  "type": "string",
                  "example": "Some notes"
                },
                "id": {
                  "description": "IBA сервер ID",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Имя IBA Server",
                  "type": "string",
                  "example": "iba-server-name.nlmk"
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "IBA Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "description": "IBA Server ID",
          "name": "iba_server_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/servers/${iba_server_id}/signals": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Register new signal for IBA Server(batch mode)",
        "operationId": "registerSignal",
        "parameters": [
          {
            "description": "Signal object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "module_number",
                "number_in_module",
                "is_digital",
                "type"
              ],
              "properties": {
                "is_digital": {
                  "type": "boolean"
                },
                "module_number": {
                  "type": "integer"
                },
                "number_in_module": {
                  "type": "integer"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "bool",
                    "real",
                    "double",
                    "int"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "storage_id",
                "module_number",
                "number_in_module",
                "is_digital"
              ],
              "properties": {
                "is_digital": {
                  "type": "boolean",
                  "example": true
                },
                "module_number": {
                  "type": "integer",
                  "example": 1
                },
                "number_in_module": {
                  "type": "integer",
                  "example": 102
                },
                "storage_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "description": "IBA Server ID",
          "name": "iba_server_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/servers/${iba_server_id}/signals/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Return IBA signal mapping by server ID",
        "operationId": "getIBAMappingByServerID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "description": "IBA Server ID",
          "name": "iba_server_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ibas/topics/${topic_name}/mapping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "iba"
        ],
        "summary": "Return IBA signal mapping by topic name",
        "operationId": "getIBAMappingByTopicName",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemsItems0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad params supplied",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "404": {
            "description": "Server not found",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "IBA topic name",
          "name": "topic_name",
          "in": "path",
          "required": true
        }
      ]
    },
    "/swagger.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "swagger"
        ],
        "summary": "Get swagger json",
        "operationId": "getSwaggerJSON",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 300
                },
                "message": {
                  "type": "string",
                  "example": "Something bad happens."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetIBAGateByNameOKBodyItems": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "comment": {
          "description": "Комментарий",
          "type": "string",
          "example": "Some notes"
        },
        "name": {
          "description": "Имя IBA Gate",
          "type": "string",
          "example": "p3apr3-pda-vc.p3.ia.nlmk"
        }
      }
    },
    "GetIBAGateMntOKBodyItems": {
      "type": "object",
      "required": [
        "mnt",
        "iba_server_id"
      ],
      "properties": {
        "comment": {
          "description": "Комментарий",
          "type": "string",
          "example": "Some notes"
        },
        "iba_server_id": {
          "description": "IBA сервер ID",
          "type": "integer",
          "example": 1
        },
        "mnt": {
          "description": "mnt",
          "type": "string",
          "example": "dp-khx"
        }
      }
    },
    "GetNodesTreeWithSignalsOKBodyDirectory": {
      "type": "object",
      "required": [
        "id",
        "name",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "description": {
          "type": "string",
          "pattern": "^.{2,200}$",
          "example": "Description"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "some_directory"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        }
      }
    },
    "GetNodesTreeWithSignalsOKBodySignals": {
      "type": "object",
      "required": [
        "id",
        "class",
        "value_type",
        "children",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "children": {
          "$ref": "#/definitions/signalWithSubtreeObject"
        },
        "class": {
          "type": "string",
          "enum": [
            "analog",
            "discrete",
            "virtual"
          ],
          "example": "analog"
        },
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "external_id": {
          "type": "integer",
          "x-nullable": true,
          "example": 1
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "unit": {
          "description": "Measurement unit",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true,
          "example": "C"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "value_type": {
          "description": "Value data type",
          "type": "string",
          "enum": [
            "undefined",
            "integer",
            "real",
            "boolean"
          ],
          "example": "real"
        }
      }
    },
    "ItemsItems0": {
      "type": "object",
      "required": [
        "id",
        "name",
        "class",
        "value_type",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "class": {
          "type": "string",
          "enum": [
            "analog",
            "discrete",
            "virtual"
          ],
          "example": "analog"
        },
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "description": {
          "type": "string",
          "pattern": "^.{2,200}$",
          "example": "Description"
        },
        "external_id": {
          "type": "integer",
          "example": 1
        },
        "has_children": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": true,
          "example": true
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "some_signal"
        },
        "unit": {
          "description": "Measurement unit",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true,
          "example": "C"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "value_type": {
          "description": "Value data type",
          "type": "string",
          "enum": [
            "undefined",
            "integer",
            "real",
            "boolean"
          ],
          "example": "real"
        }
      }
    },
    "directoryObject": {
      "type": "object",
      "required": [
        "id",
        "name",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "description": {
          "type": "string",
          "pattern": "^.{2,200}$",
          "example": "Description"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "some_directory"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        }
      }
    },
    "nodeWithSubtreeObject": {
      "type": "object",
      "required": [
        "id",
        "name",
        "prev_id",
        "full_name",
        "directory",
        "children",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "children": {
          "$ref": "#/definitions/nodeWithSubtreeObject"
        },
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "directory": {
          "$ref": "#/definitions/directoryObject"
        },
        "full_name": {
          "type": "string",
          "example": "root/sub/leaf/node"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "some_rule"
        },
        "prev_id": {
          "type": "integer",
          "example": 0
        },
        "signals": {
          "$ref": "#/definitions/signalWithSubtreeObject"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        }
      }
    },
    "signalWithSubtreeObject": {
      "type": "object",
      "required": [
        "id",
        "class",
        "value_type",
        "children",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "children": {
          "$ref": "#/definitions/signalWithSubtreeObject"
        },
        "class": {
          "type": "string",
          "enum": [
            "analog",
            "discrete",
            "virtual"
          ],
          "example": "analog"
        },
        "created_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "external_id": {
          "type": "integer",
          "x-nullable": true,
          "example": 1
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "unit": {
          "description": "Measurement unit",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true,
          "example": "C"
        },
        "updated_at": {
          "description": "ISO 8601 format",
          "type": "string",
          "format": "date-time",
          "example": "2018-03-20T09:12:28.123Z"
        },
        "value_type": {
          "description": "Value data type",
          "type": "string",
          "enum": [
            "undefined",
            "integer",
            "real",
            "boolean"
          ],
          "example": "real"
        }
      }
    }
  },
  "tags": [
    {
      "name": "swagger"
    },
    {
      "name": "iba"
    }
  ]
}`))
}
