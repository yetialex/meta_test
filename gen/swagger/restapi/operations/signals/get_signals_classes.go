// Code generated by go-swagger; DO NOT EDIT.

package signals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetSignalsClassesHandlerFunc turns a function with the right signature into a get signals classes handler
type GetSignalsClassesHandlerFunc func(GetSignalsClassesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSignalsClassesHandlerFunc) Handle(params GetSignalsClassesParams) middleware.Responder {
	return fn(params)
}

// GetSignalsClassesHandler interface for that can handle valid get signals classes params
type GetSignalsClassesHandler interface {
	Handle(GetSignalsClassesParams) middleware.Responder
}

// NewGetSignalsClasses creates a new http.Handler for the get signals classes operation
func NewGetSignalsClasses(ctx *middleware.Context, handler GetSignalsClassesHandler) *GetSignalsClasses {
	return &GetSignalsClasses{Context: ctx, Handler: handler}
}

/* GetSignalsClasses swagger:route GET /core/signals/classes signals core getSignalsClasses

Get signals classes

*/
type GetSignalsClasses struct {
	Context *middleware.Context
	Handler GetSignalsClassesHandler
}

func (o *GetSignalsClasses) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetSignalsClassesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetSignalsClassesBadRequestBody get signals classes bad request body
//
// swagger:model GetSignalsClassesBadRequestBody
type GetSignalsClassesBadRequestBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get signals classes bad request body
func (o *GetSignalsClassesBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get signals classes bad request body based on context it is used
func (o *GetSignalsClassesBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSignalsClassesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSignalsClassesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetSignalsClassesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetSignalsClassesInternalServerErrorBody get signals classes internal server error body
//
// swagger:model GetSignalsClassesInternalServerErrorBody
type GetSignalsClassesInternalServerErrorBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get signals classes internal server error body
func (o *GetSignalsClassesInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get signals classes internal server error body based on context it is used
func (o *GetSignalsClassesInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSignalsClassesInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSignalsClassesInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetSignalsClassesInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetSignalsClassesUnauthorizedBody get signals classes unauthorized body
//
// swagger:model GetSignalsClassesUnauthorizedBody
type GetSignalsClassesUnauthorizedBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get signals classes unauthorized body
func (o *GetSignalsClassesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get signals classes unauthorized body based on context it is used
func (o *GetSignalsClassesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSignalsClassesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSignalsClassesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetSignalsClassesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
