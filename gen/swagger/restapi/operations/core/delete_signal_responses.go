// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteSignalOKCode is the HTTP code returned for type DeleteSignalOK
const DeleteSignalOKCode int = 200

/*DeleteSignalOK OK

swagger:response deleteSignalOK
*/
type DeleteSignalOK struct {
}

// NewDeleteSignalOK creates DeleteSignalOK with default headers values
func NewDeleteSignalOK() *DeleteSignalOK {

	return &DeleteSignalOK{}
}

// WriteResponse to the client
func (o *DeleteSignalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteSignalBadRequestCode is the HTTP code returned for type DeleteSignalBadRequest
const DeleteSignalBadRequestCode int = 400

/*DeleteSignalBadRequest Bad params supplied

swagger:response deleteSignalBadRequest
*/
type DeleteSignalBadRequest struct {

	/*
	  In: Body
	*/
	Payload *DeleteSignalBadRequestBody `json:"body,omitempty"`
}

// NewDeleteSignalBadRequest creates DeleteSignalBadRequest with default headers values
func NewDeleteSignalBadRequest() *DeleteSignalBadRequest {

	return &DeleteSignalBadRequest{}
}

// WithPayload adds the payload to the delete signal bad request response
func (o *DeleteSignalBadRequest) WithPayload(payload *DeleteSignalBadRequestBody) *DeleteSignalBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete signal bad request response
func (o *DeleteSignalBadRequest) SetPayload(payload *DeleteSignalBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteSignalBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteSignalUnauthorizedCode is the HTTP code returned for type DeleteSignalUnauthorized
const DeleteSignalUnauthorizedCode int = 401

/*DeleteSignalUnauthorized Unauthorized

swagger:response deleteSignalUnauthorized
*/
type DeleteSignalUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *DeleteSignalUnauthorizedBody `json:"body,omitempty"`
}

// NewDeleteSignalUnauthorized creates DeleteSignalUnauthorized with default headers values
func NewDeleteSignalUnauthorized() *DeleteSignalUnauthorized {

	return &DeleteSignalUnauthorized{}
}

// WithPayload adds the payload to the delete signal unauthorized response
func (o *DeleteSignalUnauthorized) WithPayload(payload *DeleteSignalUnauthorizedBody) *DeleteSignalUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete signal unauthorized response
func (o *DeleteSignalUnauthorized) SetPayload(payload *DeleteSignalUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteSignalUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteSignalNotFoundCode is the HTTP code returned for type DeleteSignalNotFound
const DeleteSignalNotFoundCode int = 404

/*DeleteSignalNotFound Signal not found

swagger:response deleteSignalNotFound
*/
type DeleteSignalNotFound struct {

	/*
	  In: Body
	*/
	Payload *DeleteSignalNotFoundBody `json:"body,omitempty"`
}

// NewDeleteSignalNotFound creates DeleteSignalNotFound with default headers values
func NewDeleteSignalNotFound() *DeleteSignalNotFound {

	return &DeleteSignalNotFound{}
}

// WithPayload adds the payload to the delete signal not found response
func (o *DeleteSignalNotFound) WithPayload(payload *DeleteSignalNotFoundBody) *DeleteSignalNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete signal not found response
func (o *DeleteSignalNotFound) SetPayload(payload *DeleteSignalNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteSignalNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteSignalInternalServerErrorCode is the HTTP code returned for type DeleteSignalInternalServerError
const DeleteSignalInternalServerErrorCode int = 500

/*DeleteSignalInternalServerError Internal server error

swagger:response deleteSignalInternalServerError
*/
type DeleteSignalInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *DeleteSignalInternalServerErrorBody `json:"body,omitempty"`
}

// NewDeleteSignalInternalServerError creates DeleteSignalInternalServerError with default headers values
func NewDeleteSignalInternalServerError() *DeleteSignalInternalServerError {

	return &DeleteSignalInternalServerError{}
}

// WithPayload adds the payload to the delete signal internal server error response
func (o *DeleteSignalInternalServerError) WithPayload(payload *DeleteSignalInternalServerErrorBody) *DeleteSignalInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete signal internal server error response
func (o *DeleteSignalInternalServerError) SetPayload(payload *DeleteSignalInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteSignalInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
