// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCoreNodesHandlerFunc turns a function with the right signature into a get core nodes handler
type GetCoreNodesHandlerFunc func(GetCoreNodesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCoreNodesHandlerFunc) Handle(params GetCoreNodesParams) middleware.Responder {
	return fn(params)
}

// GetCoreNodesHandler interface for that can handle valid get core nodes params
type GetCoreNodesHandler interface {
	Handle(GetCoreNodesParams) middleware.Responder
}

// NewGetCoreNodes creates a new http.Handler for the get core nodes operation
func NewGetCoreNodes(ctx *middleware.Context, handler GetCoreNodesHandler) *GetCoreNodes {
	return &GetCoreNodes{Context: ctx, Handler: handler}
}

/* GetCoreNodes swagger:route GET /core/nodes core nodes getCoreNodes

Get core nodes

*/
type GetCoreNodes struct {
	Context *middleware.Context
	Handler GetCoreNodesHandler
}

func (o *GetCoreNodes) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetCoreNodesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetCoreNodesBadRequestBody get core nodes bad request body
//
// swagger:model GetCoreNodesBadRequestBody
type GetCoreNodesBadRequestBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get core nodes bad request body
func (o *GetCoreNodesBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get core nodes bad request body based on context it is used
func (o *GetCoreNodesBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCoreNodesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCoreNodesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetCoreNodesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetCoreNodesNotFoundBody get core nodes not found body
//
// swagger:model GetCoreNodesNotFoundBody
type GetCoreNodesNotFoundBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get core nodes not found body
func (o *GetCoreNodesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get core nodes not found body based on context it is used
func (o *GetCoreNodesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCoreNodesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCoreNodesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetCoreNodesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetCoreNodesOKBody get core nodes o k body
//
// swagger:model GetCoreNodesOKBody
type GetCoreNodesOKBody struct {

	// items
	Items []*GetCoreNodesOKBodyItemsItems0 `json:"items"`
}

// Validate validates this get core nodes o k body
func (o *GetCoreNodesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCoreNodesOKBody) validateItems(formats strfmt.Registry) error {
	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCoreNodesOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get core nodes o k body based on the context it is used
func (o *GetCoreNodesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCoreNodesOKBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCoreNodesOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCoreNodesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCoreNodesOKBody) UnmarshalBinary(b []byte) error {
	var res GetCoreNodesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetCoreNodesOKBodyItemsItems0 get core nodes o k body items items0
//
// swagger:model GetCoreNodesOKBodyItemsItems0
type GetCoreNodesOKBodyItemsItems0 struct {

	// ISO 8601 format
	// Example: 2018-03-20T09:12:28.123Z
	// Required: true
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"created_at"`

	// directory id
	// Example: 1
	DirectoryID int64 `json:"directory_id,omitempty"`

	// has children
	// Example: true
	HasChildren *bool `json:"has_children,omitempty"`

	// id
	// Example: 1
	// Required: true
	ID *int64 `json:"id"`

	// name
	// Example: some_node
	// Required: true
	Name *string `json:"name"`

	// prev id
	// Example: 0
	// Required: true
	PrevID *int64 `json:"prev_id"`

	// signal id
	// Example: 1
	SignalID int64 `json:"signal_id,omitempty"`

	// ISO 8601 format
	// Example: 2018-03-20T09:12:28.123Z
	// Required: true
	// Format: date-time
	UpdatedAt *strfmt.DateTime `json:"updated_at"`
}

// Validate validates this get core nodes o k body items items0
func (o *GetCoreNodesOKBodyItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrevID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCoreNodesOKBodyItemsItems0) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("created_at", "body", "date-time", o.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCoreNodesOKBodyItemsItems0) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *GetCoreNodesOKBodyItemsItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetCoreNodesOKBodyItemsItems0) validatePrevID(formats strfmt.Registry) error {

	if err := validate.Required("prev_id", "body", o.PrevID); err != nil {
		return err
	}

	return nil
}

func (o *GetCoreNodesOKBodyItemsItems0) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("updated_at", "body", "date-time", o.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get core nodes o k body items items0 based on context it is used
func (o *GetCoreNodesOKBodyItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCoreNodesOKBodyItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCoreNodesOKBodyItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetCoreNodesOKBodyItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetCoreNodesUnauthorizedBody get core nodes unauthorized body
//
// swagger:model GetCoreNodesUnauthorizedBody
type GetCoreNodesUnauthorizedBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get core nodes unauthorized body
func (o *GetCoreNodesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get core nodes unauthorized body based on context it is used
func (o *GetCoreNodesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCoreNodesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCoreNodesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetCoreNodesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
