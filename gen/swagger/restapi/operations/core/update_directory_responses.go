// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/yetialex/meta_test/gen/swagger/models"
)

// UpdateDirectoryOKCode is the HTTP code returned for type UpdateDirectoryOK
const UpdateDirectoryOKCode int = 200

/*UpdateDirectoryOK OK

swagger:response updateDirectoryOK
*/
type UpdateDirectoryOK struct {

	/*
	  In: Body
	*/
	Payload *models.DirectoryObject `json:"body,omitempty"`
}

// NewUpdateDirectoryOK creates UpdateDirectoryOK with default headers values
func NewUpdateDirectoryOK() *UpdateDirectoryOK {

	return &UpdateDirectoryOK{}
}

// WithPayload adds the payload to the update directory o k response
func (o *UpdateDirectoryOK) WithPayload(payload *models.DirectoryObject) *UpdateDirectoryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update directory o k response
func (o *UpdateDirectoryOK) SetPayload(payload *models.DirectoryObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDirectoryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateDirectoryBadRequestCode is the HTTP code returned for type UpdateDirectoryBadRequest
const UpdateDirectoryBadRequestCode int = 400

/*UpdateDirectoryBadRequest Bad params supplied

swagger:response updateDirectoryBadRequest
*/
type UpdateDirectoryBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateDirectoryBadRequest creates UpdateDirectoryBadRequest with default headers values
func NewUpdateDirectoryBadRequest() *UpdateDirectoryBadRequest {

	return &UpdateDirectoryBadRequest{}
}

// WithPayload adds the payload to the update directory bad request response
func (o *UpdateDirectoryBadRequest) WithPayload(payload *models.ErrorResponse) *UpdateDirectoryBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update directory bad request response
func (o *UpdateDirectoryBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDirectoryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateDirectoryUnauthorizedCode is the HTTP code returned for type UpdateDirectoryUnauthorized
const UpdateDirectoryUnauthorizedCode int = 401

/*UpdateDirectoryUnauthorized Unauthorized

swagger:response updateDirectoryUnauthorized
*/
type UpdateDirectoryUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateDirectoryUnauthorized creates UpdateDirectoryUnauthorized with default headers values
func NewUpdateDirectoryUnauthorized() *UpdateDirectoryUnauthorized {

	return &UpdateDirectoryUnauthorized{}
}

// WithPayload adds the payload to the update directory unauthorized response
func (o *UpdateDirectoryUnauthorized) WithPayload(payload *models.ErrorResponse) *UpdateDirectoryUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update directory unauthorized response
func (o *UpdateDirectoryUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDirectoryUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateDirectoryNotFoundCode is the HTTP code returned for type UpdateDirectoryNotFound
const UpdateDirectoryNotFoundCode int = 404

/*UpdateDirectoryNotFound Directory not found

swagger:response updateDirectoryNotFound
*/
type UpdateDirectoryNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateDirectoryNotFound creates UpdateDirectoryNotFound with default headers values
func NewUpdateDirectoryNotFound() *UpdateDirectoryNotFound {

	return &UpdateDirectoryNotFound{}
}

// WithPayload adds the payload to the update directory not found response
func (o *UpdateDirectoryNotFound) WithPayload(payload *models.ErrorResponse) *UpdateDirectoryNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update directory not found response
func (o *UpdateDirectoryNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDirectoryNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateDirectoryInternalServerErrorCode is the HTTP code returned for type UpdateDirectoryInternalServerError
const UpdateDirectoryInternalServerErrorCode int = 500

/*UpdateDirectoryInternalServerError Internal server error

swagger:response updateDirectoryInternalServerError
*/
type UpdateDirectoryInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateDirectoryInternalServerError creates UpdateDirectoryInternalServerError with default headers values
func NewUpdateDirectoryInternalServerError() *UpdateDirectoryInternalServerError {

	return &UpdateDirectoryInternalServerError{}
}

// WithPayload adds the payload to the update directory internal server error response
func (o *UpdateDirectoryInternalServerError) WithPayload(payload *models.ErrorResponse) *UpdateDirectoryInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update directory internal server error response
func (o *UpdateDirectoryInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDirectoryInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
