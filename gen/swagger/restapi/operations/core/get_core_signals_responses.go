// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetCoreSignalsOKCode is the HTTP code returned for type GetCoreSignalsOK
const GetCoreSignalsOKCode int = 200

/*GetCoreSignalsOK OK

swagger:response getCoreSignalsOK
*/
type GetCoreSignalsOK struct {

	/*
	  In: Body
	*/
	Payload *GetCoreSignalsOKBody `json:"body,omitempty"`
}

// NewGetCoreSignalsOK creates GetCoreSignalsOK with default headers values
func NewGetCoreSignalsOK() *GetCoreSignalsOK {

	return &GetCoreSignalsOK{}
}

// WithPayload adds the payload to the get core signals o k response
func (o *GetCoreSignalsOK) WithPayload(payload *GetCoreSignalsOKBody) *GetCoreSignalsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get core signals o k response
func (o *GetCoreSignalsOK) SetPayload(payload *GetCoreSignalsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCoreSignalsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCoreSignalsBadRequestCode is the HTTP code returned for type GetCoreSignalsBadRequest
const GetCoreSignalsBadRequestCode int = 400

/*GetCoreSignalsBadRequest Bad params supplied

swagger:response getCoreSignalsBadRequest
*/
type GetCoreSignalsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *GetCoreSignalsBadRequestBody `json:"body,omitempty"`
}

// NewGetCoreSignalsBadRequest creates GetCoreSignalsBadRequest with default headers values
func NewGetCoreSignalsBadRequest() *GetCoreSignalsBadRequest {

	return &GetCoreSignalsBadRequest{}
}

// WithPayload adds the payload to the get core signals bad request response
func (o *GetCoreSignalsBadRequest) WithPayload(payload *GetCoreSignalsBadRequestBody) *GetCoreSignalsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get core signals bad request response
func (o *GetCoreSignalsBadRequest) SetPayload(payload *GetCoreSignalsBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCoreSignalsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCoreSignalsUnauthorizedCode is the HTTP code returned for type GetCoreSignalsUnauthorized
const GetCoreSignalsUnauthorizedCode int = 401

/*GetCoreSignalsUnauthorized Unauthorized

swagger:response getCoreSignalsUnauthorized
*/
type GetCoreSignalsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *GetCoreSignalsUnauthorizedBody `json:"body,omitempty"`
}

// NewGetCoreSignalsUnauthorized creates GetCoreSignalsUnauthorized with default headers values
func NewGetCoreSignalsUnauthorized() *GetCoreSignalsUnauthorized {

	return &GetCoreSignalsUnauthorized{}
}

// WithPayload adds the payload to the get core signals unauthorized response
func (o *GetCoreSignalsUnauthorized) WithPayload(payload *GetCoreSignalsUnauthorizedBody) *GetCoreSignalsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get core signals unauthorized response
func (o *GetCoreSignalsUnauthorized) SetPayload(payload *GetCoreSignalsUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCoreSignalsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCoreSignalsNotFoundCode is the HTTP code returned for type GetCoreSignalsNotFound
const GetCoreSignalsNotFoundCode int = 404

/*GetCoreSignalsNotFound Core signals not found

swagger:response getCoreSignalsNotFound
*/
type GetCoreSignalsNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetCoreSignalsNotFoundBody `json:"body,omitempty"`
}

// NewGetCoreSignalsNotFound creates GetCoreSignalsNotFound with default headers values
func NewGetCoreSignalsNotFound() *GetCoreSignalsNotFound {

	return &GetCoreSignalsNotFound{}
}

// WithPayload adds the payload to the get core signals not found response
func (o *GetCoreSignalsNotFound) WithPayload(payload *GetCoreSignalsNotFoundBody) *GetCoreSignalsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get core signals not found response
func (o *GetCoreSignalsNotFound) SetPayload(payload *GetCoreSignalsNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCoreSignalsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
