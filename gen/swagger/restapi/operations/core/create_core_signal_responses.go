// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// CreateCoreSignalOKCode is the HTTP code returned for type CreateCoreSignalOK
const CreateCoreSignalOKCode int = 200

/*CreateCoreSignalOK OK

swagger:response createCoreSignalOK
*/
type CreateCoreSignalOK struct {

	/*
	  In: Body
	*/
	Payload *CreateCoreSignalOKBody `json:"body,omitempty"`
}

// NewCreateCoreSignalOK creates CreateCoreSignalOK with default headers values
func NewCreateCoreSignalOK() *CreateCoreSignalOK {

	return &CreateCoreSignalOK{}
}

// WithPayload adds the payload to the create core signal o k response
func (o *CreateCoreSignalOK) WithPayload(payload *CreateCoreSignalOKBody) *CreateCoreSignalOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core signal o k response
func (o *CreateCoreSignalOK) SetPayload(payload *CreateCoreSignalOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreSignalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreSignalBadRequestCode is the HTTP code returned for type CreateCoreSignalBadRequest
const CreateCoreSignalBadRequestCode int = 400

/*CreateCoreSignalBadRequest Bad params supplied

swagger:response createCoreSignalBadRequest
*/
type CreateCoreSignalBadRequest struct {

	/*
	  In: Body
	*/
	Payload *CreateCoreSignalBadRequestBody `json:"body,omitempty"`
}

// NewCreateCoreSignalBadRequest creates CreateCoreSignalBadRequest with default headers values
func NewCreateCoreSignalBadRequest() *CreateCoreSignalBadRequest {

	return &CreateCoreSignalBadRequest{}
}

// WithPayload adds the payload to the create core signal bad request response
func (o *CreateCoreSignalBadRequest) WithPayload(payload *CreateCoreSignalBadRequestBody) *CreateCoreSignalBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core signal bad request response
func (o *CreateCoreSignalBadRequest) SetPayload(payload *CreateCoreSignalBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreSignalBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreSignalUnauthorizedCode is the HTTP code returned for type CreateCoreSignalUnauthorized
const CreateCoreSignalUnauthorizedCode int = 401

/*CreateCoreSignalUnauthorized Unauthorized

swagger:response createCoreSignalUnauthorized
*/
type CreateCoreSignalUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *CreateCoreSignalUnauthorizedBody `json:"body,omitempty"`
}

// NewCreateCoreSignalUnauthorized creates CreateCoreSignalUnauthorized with default headers values
func NewCreateCoreSignalUnauthorized() *CreateCoreSignalUnauthorized {

	return &CreateCoreSignalUnauthorized{}
}

// WithPayload adds the payload to the create core signal unauthorized response
func (o *CreateCoreSignalUnauthorized) WithPayload(payload *CreateCoreSignalUnauthorizedBody) *CreateCoreSignalUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core signal unauthorized response
func (o *CreateCoreSignalUnauthorized) SetPayload(payload *CreateCoreSignalUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreSignalUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreSignalConflictCode is the HTTP code returned for type CreateCoreSignalConflict
const CreateCoreSignalConflictCode int = 409

/*CreateCoreSignalConflict Conflict, signal already registered

swagger:response createCoreSignalConflict
*/
type CreateCoreSignalConflict struct {

	/*
	  In: Body
	*/
	Payload *CreateCoreSignalConflictBody `json:"body,omitempty"`
}

// NewCreateCoreSignalConflict creates CreateCoreSignalConflict with default headers values
func NewCreateCoreSignalConflict() *CreateCoreSignalConflict {

	return &CreateCoreSignalConflict{}
}

// WithPayload adds the payload to the create core signal conflict response
func (o *CreateCoreSignalConflict) WithPayload(payload *CreateCoreSignalConflictBody) *CreateCoreSignalConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core signal conflict response
func (o *CreateCoreSignalConflict) SetPayload(payload *CreateCoreSignalConflictBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreSignalConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
