// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/yetialex/meta_test/gen/swagger/models"
)

// CreateNodeOKCode is the HTTP code returned for type CreateNodeOK
const CreateNodeOKCode int = 200

/*CreateNodeOK OK

swagger:response createNodeOK
*/
type CreateNodeOK struct {

	/*
	  In: Body
	*/
	Payload *models.NodeObject `json:"body,omitempty"`
}

// NewCreateNodeOK creates CreateNodeOK with default headers values
func NewCreateNodeOK() *CreateNodeOK {

	return &CreateNodeOK{}
}

// WithPayload adds the payload to the create node o k response
func (o *CreateNodeOK) WithPayload(payload *models.NodeObject) *CreateNodeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create node o k response
func (o *CreateNodeOK) SetPayload(payload *models.NodeObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNodeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNodeBadRequestCode is the HTTP code returned for type CreateNodeBadRequest
const CreateNodeBadRequestCode int = 400

/*CreateNodeBadRequest Bad params supplied

swagger:response createNodeBadRequest
*/
type CreateNodeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateNodeBadRequest creates CreateNodeBadRequest with default headers values
func NewCreateNodeBadRequest() *CreateNodeBadRequest {

	return &CreateNodeBadRequest{}
}

// WithPayload adds the payload to the create node bad request response
func (o *CreateNodeBadRequest) WithPayload(payload *models.ErrorResponse) *CreateNodeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create node bad request response
func (o *CreateNodeBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNodeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNodeUnauthorizedCode is the HTTP code returned for type CreateNodeUnauthorized
const CreateNodeUnauthorizedCode int = 401

/*CreateNodeUnauthorized Unauthorized

swagger:response createNodeUnauthorized
*/
type CreateNodeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateNodeUnauthorized creates CreateNodeUnauthorized with default headers values
func NewCreateNodeUnauthorized() *CreateNodeUnauthorized {

	return &CreateNodeUnauthorized{}
}

// WithPayload adds the payload to the create node unauthorized response
func (o *CreateNodeUnauthorized) WithPayload(payload *models.ErrorResponse) *CreateNodeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create node unauthorized response
func (o *CreateNodeUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNodeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNodeConflictCode is the HTTP code returned for type CreateNodeConflict
const CreateNodeConflictCode int = 409

/*CreateNodeConflict Conflict, gate already registered

swagger:response createNodeConflict
*/
type CreateNodeConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateNodeConflict creates CreateNodeConflict with default headers values
func NewCreateNodeConflict() *CreateNodeConflict {

	return &CreateNodeConflict{}
}

// WithPayload adds the payload to the create node conflict response
func (o *CreateNodeConflict) WithPayload(payload *models.ErrorResponse) *CreateNodeConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create node conflict response
func (o *CreateNodeConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNodeConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
