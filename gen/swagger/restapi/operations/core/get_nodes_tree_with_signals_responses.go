// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/yetialex/meta_test/gen/swagger/models"
)

// GetNodesTreeWithSignalsOKCode is the HTTP code returned for type GetNodesTreeWithSignalsOK
const GetNodesTreeWithSignalsOKCode int = 200

/*GetNodesTreeWithSignalsOK OK

swagger:response getNodesTreeWithSignalsOK
*/
type GetNodesTreeWithSignalsOK struct {

	/*
	  In: Body
	*/
	Payload *models.NodeWithSubtreeObject `json:"body,omitempty"`
}

// NewGetNodesTreeWithSignalsOK creates GetNodesTreeWithSignalsOK with default headers values
func NewGetNodesTreeWithSignalsOK() *GetNodesTreeWithSignalsOK {

	return &GetNodesTreeWithSignalsOK{}
}

// WithPayload adds the payload to the get nodes tree with signals o k response
func (o *GetNodesTreeWithSignalsOK) WithPayload(payload *models.NodeWithSubtreeObject) *GetNodesTreeWithSignalsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get nodes tree with signals o k response
func (o *GetNodesTreeWithSignalsOK) SetPayload(payload *models.NodeWithSubtreeObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodesTreeWithSignalsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNodesTreeWithSignalsBadRequestCode is the HTTP code returned for type GetNodesTreeWithSignalsBadRequest
const GetNodesTreeWithSignalsBadRequestCode int = 400

/*GetNodesTreeWithSignalsBadRequest Bad params supplied

swagger:response getNodesTreeWithSignalsBadRequest
*/
type GetNodesTreeWithSignalsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetNodesTreeWithSignalsBadRequest creates GetNodesTreeWithSignalsBadRequest with default headers values
func NewGetNodesTreeWithSignalsBadRequest() *GetNodesTreeWithSignalsBadRequest {

	return &GetNodesTreeWithSignalsBadRequest{}
}

// WithPayload adds the payload to the get nodes tree with signals bad request response
func (o *GetNodesTreeWithSignalsBadRequest) WithPayload(payload *models.ErrorResponse) *GetNodesTreeWithSignalsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get nodes tree with signals bad request response
func (o *GetNodesTreeWithSignalsBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodesTreeWithSignalsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNodesTreeWithSignalsUnauthorizedCode is the HTTP code returned for type GetNodesTreeWithSignalsUnauthorized
const GetNodesTreeWithSignalsUnauthorizedCode int = 401

/*GetNodesTreeWithSignalsUnauthorized Unauthorized

swagger:response getNodesTreeWithSignalsUnauthorized
*/
type GetNodesTreeWithSignalsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetNodesTreeWithSignalsUnauthorized creates GetNodesTreeWithSignalsUnauthorized with default headers values
func NewGetNodesTreeWithSignalsUnauthorized() *GetNodesTreeWithSignalsUnauthorized {

	return &GetNodesTreeWithSignalsUnauthorized{}
}

// WithPayload adds the payload to the get nodes tree with signals unauthorized response
func (o *GetNodesTreeWithSignalsUnauthorized) WithPayload(payload *models.ErrorResponse) *GetNodesTreeWithSignalsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get nodes tree with signals unauthorized response
func (o *GetNodesTreeWithSignalsUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodesTreeWithSignalsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNodesTreeWithSignalsNotFoundCode is the HTTP code returned for type GetNodesTreeWithSignalsNotFound
const GetNodesTreeWithSignalsNotFoundCode int = 404

/*GetNodesTreeWithSignalsNotFound Nothing found

swagger:response getNodesTreeWithSignalsNotFound
*/
type GetNodesTreeWithSignalsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetNodesTreeWithSignalsNotFound creates GetNodesTreeWithSignalsNotFound with default headers values
func NewGetNodesTreeWithSignalsNotFound() *GetNodesTreeWithSignalsNotFound {

	return &GetNodesTreeWithSignalsNotFound{}
}

// WithPayload adds the payload to the get nodes tree with signals not found response
func (o *GetNodesTreeWithSignalsNotFound) WithPayload(payload *models.ErrorResponse) *GetNodesTreeWithSignalsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get nodes tree with signals not found response
func (o *GetNodesTreeWithSignalsNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodesTreeWithSignalsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNodesTreeWithSignalsInternalServerErrorCode is the HTTP code returned for type GetNodesTreeWithSignalsInternalServerError
const GetNodesTreeWithSignalsInternalServerErrorCode int = 500

/*GetNodesTreeWithSignalsInternalServerError Internal server error

swagger:response getNodesTreeWithSignalsInternalServerError
*/
type GetNodesTreeWithSignalsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetNodesTreeWithSignalsInternalServerError creates GetNodesTreeWithSignalsInternalServerError with default headers values
func NewGetNodesTreeWithSignalsInternalServerError() *GetNodesTreeWithSignalsInternalServerError {

	return &GetNodesTreeWithSignalsInternalServerError{}
}

// WithPayload adds the payload to the get nodes tree with signals internal server error response
func (o *GetNodesTreeWithSignalsInternalServerError) WithPayload(payload *models.ErrorResponse) *GetNodesTreeWithSignalsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get nodes tree with signals internal server error response
func (o *GetNodesTreeWithSignalsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodesTreeWithSignalsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
