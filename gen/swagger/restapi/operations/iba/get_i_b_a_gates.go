// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetIBAGatesHandlerFunc turns a function with the right signature into a get i b a gates handler
type GetIBAGatesHandlerFunc func(GetIBAGatesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIBAGatesHandlerFunc) Handle(params GetIBAGatesParams) middleware.Responder {
	return fn(params)
}

// GetIBAGatesHandler interface for that can handle valid get i b a gates params
type GetIBAGatesHandler interface {
	Handle(GetIBAGatesParams) middleware.Responder
}

// NewGetIBAGates creates a new http.Handler for the get i b a gates operation
func NewGetIBAGates(ctx *middleware.Context, handler GetIBAGatesHandler) *GetIBAGates {
	return &GetIBAGates{Context: ctx, Handler: handler}
}

/* GetIBAGates swagger:route GET /ibas/gates iba getIBAGates

Get all Gates

*/
type GetIBAGates struct {
	Context *middleware.Context
	Handler GetIBAGatesHandler
}

func (o *GetIBAGates) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetIBAGatesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetIBAGatesBadRequestBody get i b a gates bad request body
//
// swagger:model GetIBAGatesBadRequestBody
type GetIBAGatesBadRequestBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a gates bad request body
func (o *GetIBAGatesBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a gates bad request body based on context it is used
func (o *GetIBAGatesBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAGatesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAGatesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetIBAGatesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAGatesNotFoundBody get i b a gates not found body
//
// swagger:model GetIBAGatesNotFoundBody
type GetIBAGatesNotFoundBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a gates not found body
func (o *GetIBAGatesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a gates not found body based on context it is used
func (o *GetIBAGatesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAGatesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAGatesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetIBAGatesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAGatesOKBody get i b a gates o k body
//
// swagger:model GetIBAGatesOKBody
type GetIBAGatesOKBody struct {

	// items
	Items []*GetIBAGatesOKBodyItemsItems0 `json:"items"`
}

// Validate validates this get i b a gates o k body
func (o *GetIBAGatesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAGatesOKBody) validateItems(formats strfmt.Registry) error {
	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIBAGatesOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get i b a gates o k body based on the context it is used
func (o *GetIBAGatesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAGatesOKBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIBAGatesOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAGatesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAGatesOKBody) UnmarshalBinary(b []byte) error {
	var res GetIBAGatesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAGatesOKBodyItemsItems0 get i b a gates o k body items items0
//
// swagger:model GetIBAGatesOKBodyItemsItems0
type GetIBAGatesOKBodyItemsItems0 struct {

	// Комментарий
	// Example: Some notes
	Comment string `json:"comment,omitempty"`

	// Имя IBA Gate
	// Example: p3apr3-pda-vc.p3.ia.nlmk
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this get i b a gates o k body items items0
func (o *GetIBAGatesOKBodyItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAGatesOKBodyItemsItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get i b a gates o k body items items0 based on context it is used
func (o *GetIBAGatesOKBodyItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAGatesOKBodyItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAGatesOKBodyItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetIBAGatesOKBodyItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAGatesUnauthorizedBody get i b a gates unauthorized body
//
// swagger:model GetIBAGatesUnauthorizedBody
type GetIBAGatesUnauthorizedBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a gates unauthorized body
func (o *GetIBAGatesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a gates unauthorized body based on context it is used
func (o *GetIBAGatesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAGatesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAGatesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetIBAGatesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
