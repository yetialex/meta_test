// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetIBAMappingByServerIDHandlerFunc turns a function with the right signature into a get i b a mapping by server ID handler
type GetIBAMappingByServerIDHandlerFunc func(GetIBAMappingByServerIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIBAMappingByServerIDHandlerFunc) Handle(params GetIBAMappingByServerIDParams) middleware.Responder {
	return fn(params)
}

// GetIBAMappingByServerIDHandler interface for that can handle valid get i b a mapping by server ID params
type GetIBAMappingByServerIDHandler interface {
	Handle(GetIBAMappingByServerIDParams) middleware.Responder
}

// NewGetIBAMappingByServerID creates a new http.Handler for the get i b a mapping by server ID operation
func NewGetIBAMappingByServerID(ctx *middleware.Context, handler GetIBAMappingByServerIDHandler) *GetIBAMappingByServerID {
	return &GetIBAMappingByServerID{Context: ctx, Handler: handler}
}

/* GetIBAMappingByServerID swagger:route GET /ibas/servers/${iba_server_id}/signals/mapping iba getIBAMappingByServerId

Return IBA signal mapping by server ID

*/
type GetIBAMappingByServerID struct {
	Context *middleware.Context
	Handler GetIBAMappingByServerIDHandler
}

func (o *GetIBAMappingByServerID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetIBAMappingByServerIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetIBAMappingByServerIDBadRequestBody get i b a mapping by server ID bad request body
//
// swagger:model GetIBAMappingByServerIDBadRequestBody
type GetIBAMappingByServerIDBadRequestBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a mapping by server ID bad request body
func (o *GetIBAMappingByServerIDBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a mapping by server ID bad request body based on context it is used
func (o *GetIBAMappingByServerIDBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAMappingByServerIDBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAMappingByServerIDBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetIBAMappingByServerIDBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAMappingByServerIDInternalServerErrorBody get i b a mapping by server ID internal server error body
//
// swagger:model GetIBAMappingByServerIDInternalServerErrorBody
type GetIBAMappingByServerIDInternalServerErrorBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a mapping by server ID internal server error body
func (o *GetIBAMappingByServerIDInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a mapping by server ID internal server error body based on context it is used
func (o *GetIBAMappingByServerIDInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAMappingByServerIDInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAMappingByServerIDInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetIBAMappingByServerIDInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAMappingByServerIDNotFoundBody get i b a mapping by server ID not found body
//
// swagger:model GetIBAMappingByServerIDNotFoundBody
type GetIBAMappingByServerIDNotFoundBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a mapping by server ID not found body
func (o *GetIBAMappingByServerIDNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a mapping by server ID not found body based on context it is used
func (o *GetIBAMappingByServerIDNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAMappingByServerIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAMappingByServerIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetIBAMappingByServerIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAMappingByServerIDOKBody get i b a mapping by server ID o k body
//
// swagger:model GetIBAMappingByServerIDOKBody
type GetIBAMappingByServerIDOKBody struct {

	// items
	Items []*GetIBAMappingByServerIDOKBodyItemsItems0 `json:"items"`
}

// Validate validates this get i b a mapping by server ID o k body
func (o *GetIBAMappingByServerIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAMappingByServerIDOKBody) validateItems(formats strfmt.Registry) error {
	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIBAMappingByServerIdOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get i b a mapping by server ID o k body based on the context it is used
func (o *GetIBAMappingByServerIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAMappingByServerIDOKBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIBAMappingByServerIdOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAMappingByServerIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAMappingByServerIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetIBAMappingByServerIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAMappingByServerIDOKBodyItemsItems0 get i b a mapping by server ID o k body items items0
//
// swagger:model GetIBAMappingByServerIDOKBodyItemsItems0
type GetIBAMappingByServerIDOKBodyItemsItems0 struct {

	// is digital
	// Example: true
	// Required: true
	IsDigital *bool `json:"is_digital"`

	// module number
	// Example: 1
	// Required: true
	ModuleNumber *int64 `json:"module_number"`

	// number in module
	// Example: 102
	// Required: true
	NumberInModule *int64 `json:"number_in_module"`

	// storage id
	// Example: 1
	// Required: true
	StorageID *int64 `json:"storage_id"`
}

// Validate validates this get i b a mapping by server ID o k body items items0
func (o *GetIBAMappingByServerIDOKBodyItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIsDigital(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateModuleNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNumberInModule(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStorageID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAMappingByServerIDOKBodyItemsItems0) validateIsDigital(formats strfmt.Registry) error {

	if err := validate.Required("is_digital", "body", o.IsDigital); err != nil {
		return err
	}

	return nil
}

func (o *GetIBAMappingByServerIDOKBodyItemsItems0) validateModuleNumber(formats strfmt.Registry) error {

	if err := validate.Required("module_number", "body", o.ModuleNumber); err != nil {
		return err
	}

	return nil
}

func (o *GetIBAMappingByServerIDOKBodyItemsItems0) validateNumberInModule(formats strfmt.Registry) error {

	if err := validate.Required("number_in_module", "body", o.NumberInModule); err != nil {
		return err
	}

	return nil
}

func (o *GetIBAMappingByServerIDOKBodyItemsItems0) validateStorageID(formats strfmt.Registry) error {

	if err := validate.Required("storage_id", "body", o.StorageID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get i b a mapping by server ID o k body items items0 based on context it is used
func (o *GetIBAMappingByServerIDOKBodyItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAMappingByServerIDOKBodyItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAMappingByServerIDOKBodyItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetIBAMappingByServerIDOKBodyItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAMappingByServerIDUnauthorizedBody get i b a mapping by server ID unauthorized body
//
// swagger:model GetIBAMappingByServerIDUnauthorizedBody
type GetIBAMappingByServerIDUnauthorizedBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a mapping by server ID unauthorized body
func (o *GetIBAMappingByServerIDUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a mapping by server ID unauthorized body based on context it is used
func (o *GetIBAMappingByServerIDUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAMappingByServerIDUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAMappingByServerIDUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetIBAMappingByServerIDUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
