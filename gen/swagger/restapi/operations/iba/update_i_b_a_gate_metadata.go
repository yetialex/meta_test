// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateIBAGateMetadataHandlerFunc turns a function with the right signature into a update i b a gate metadata handler
type UpdateIBAGateMetadataHandlerFunc func(UpdateIBAGateMetadataParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateIBAGateMetadataHandlerFunc) Handle(params UpdateIBAGateMetadataParams) middleware.Responder {
	return fn(params)
}

// UpdateIBAGateMetadataHandler interface for that can handle valid update i b a gate metadata params
type UpdateIBAGateMetadataHandler interface {
	Handle(UpdateIBAGateMetadataParams) middleware.Responder
}

// NewUpdateIBAGateMetadata creates a new http.Handler for the update i b a gate metadata operation
func NewUpdateIBAGateMetadata(ctx *middleware.Context, handler UpdateIBAGateMetadataHandler) *UpdateIBAGateMetadata {
	return &UpdateIBAGateMetadata{Context: ctx, Handler: handler}
}

/* UpdateIBAGateMetadata swagger:route PATCH /ibas/gates/${gate_name} iba updateIBAGateMetadata

Modify Gate Metadata

*/
type UpdateIBAGateMetadata struct {
	Context *middleware.Context
	Handler UpdateIBAGateMetadataHandler
}

func (o *UpdateIBAGateMetadata) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateIBAGateMetadataParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// UpdateIBAGateMetadataBadRequestBody update i b a gate metadata bad request body
//
// swagger:model UpdateIBAGateMetadataBadRequestBody
type UpdateIBAGateMetadataBadRequestBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this update i b a gate metadata bad request body
func (o *UpdateIBAGateMetadataBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update i b a gate metadata bad request body based on context it is used
func (o *UpdateIBAGateMetadataBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateIBAGateMetadataBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateIBAGateMetadataBadRequestBody) UnmarshalBinary(b []byte) error {
	var res UpdateIBAGateMetadataBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateIBAGateMetadataBody update i b a gate metadata body
//
// swagger:model UpdateIBAGateMetadataBody
type UpdateIBAGateMetadataBody struct {

	// comment
	Comment string `json:"comment,omitempty"`
}

// Validate validates this update i b a gate metadata body
func (o *UpdateIBAGateMetadataBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update i b a gate metadata body based on context it is used
func (o *UpdateIBAGateMetadataBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateIBAGateMetadataBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateIBAGateMetadataBody) UnmarshalBinary(b []byte) error {
	var res UpdateIBAGateMetadataBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateIBAGateMetadataNotFoundBody update i b a gate metadata not found body
//
// swagger:model UpdateIBAGateMetadataNotFoundBody
type UpdateIBAGateMetadataNotFoundBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this update i b a gate metadata not found body
func (o *UpdateIBAGateMetadataNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update i b a gate metadata not found body based on context it is used
func (o *UpdateIBAGateMetadataNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateIBAGateMetadataNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateIBAGateMetadataNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UpdateIBAGateMetadataNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateIBAGateMetadataOKBody update i b a gate metadata o k body
//
// swagger:model UpdateIBAGateMetadataOKBody
type UpdateIBAGateMetadataOKBody struct {

	// Комментарий
	// Example: Some notes
	Comment string `json:"comment,omitempty"`

	// Имя IBA Gate
	// Example: p3apr3-pda-vc.p3.ia.nlmk
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this update i b a gate metadata o k body
func (o *UpdateIBAGateMetadataOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateIBAGateMetadataOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("updateIBAGateMetadataOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update i b a gate metadata o k body based on context it is used
func (o *UpdateIBAGateMetadataOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateIBAGateMetadataOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateIBAGateMetadataOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateIBAGateMetadataOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateIBAGateMetadataUnauthorizedBody update i b a gate metadata unauthorized body
//
// swagger:model UpdateIBAGateMetadataUnauthorizedBody
type UpdateIBAGateMetadataUnauthorizedBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this update i b a gate metadata unauthorized body
func (o *UpdateIBAGateMetadataUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update i b a gate metadata unauthorized body based on context it is used
func (o *UpdateIBAGateMetadataUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateIBAGateMetadataUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateIBAGateMetadataUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res UpdateIBAGateMetadataUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
