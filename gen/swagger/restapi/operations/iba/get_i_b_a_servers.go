// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetIBAServersHandlerFunc turns a function with the right signature into a get i b a servers handler
type GetIBAServersHandlerFunc func(GetIBAServersParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIBAServersHandlerFunc) Handle(params GetIBAServersParams) middleware.Responder {
	return fn(params)
}

// GetIBAServersHandler interface for that can handle valid get i b a servers params
type GetIBAServersHandler interface {
	Handle(GetIBAServersParams) middleware.Responder
}

// NewGetIBAServers creates a new http.Handler for the get i b a servers operation
func NewGetIBAServers(ctx *middleware.Context, handler GetIBAServersHandler) *GetIBAServers {
	return &GetIBAServers{Context: ctx, Handler: handler}
}

/* GetIBAServers swagger:route GET /ibas/servers/ iba getIBAServers

Get IBA Servers

*/
type GetIBAServers struct {
	Context *middleware.Context
	Handler GetIBAServersHandler
}

func (o *GetIBAServers) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetIBAServersParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetIBAServersBadRequestBody get i b a servers bad request body
//
// swagger:model GetIBAServersBadRequestBody
type GetIBAServersBadRequestBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a servers bad request body
func (o *GetIBAServersBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a servers bad request body based on context it is used
func (o *GetIBAServersBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServersBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServersBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetIBAServersBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAServersNotFoundBody get i b a servers not found body
//
// swagger:model GetIBAServersNotFoundBody
type GetIBAServersNotFoundBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a servers not found body
func (o *GetIBAServersNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a servers not found body based on context it is used
func (o *GetIBAServersNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServersNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServersNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetIBAServersNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAServersOKBody get i b a servers o k body
//
// swagger:model GetIBAServersOKBody
type GetIBAServersOKBody struct {

	// items
	Items []*GetIBAServersOKBodyItemsItems0 `json:"items"`
}

// Validate validates this get i b a servers o k body
func (o *GetIBAServersOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAServersOKBody) validateItems(formats strfmt.Registry) error {
	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIBAServersOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get i b a servers o k body based on the context it is used
func (o *GetIBAServersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAServersOKBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIBAServersOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServersOKBody) UnmarshalBinary(b []byte) error {
	var res GetIBAServersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAServersOKBodyItemsItems0 get i b a servers o k body items items0
//
// swagger:model GetIBAServersOKBodyItemsItems0
type GetIBAServersOKBodyItemsItems0 struct {

	// Комментарий
	// Example: Some notes
	Comment string `json:"comment,omitempty"`

	// IBA сервер ID
	// Example: 1
	// Required: true
	ID *int64 `json:"id"`

	// Имя IBA Server
	// Example: iba-server-name.nlmk
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this get i b a servers o k body items items0
func (o *GetIBAServersOKBodyItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAServersOKBodyItemsItems0) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *GetIBAServersOKBodyItemsItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get i b a servers o k body items items0 based on context it is used
func (o *GetIBAServersOKBodyItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServersOKBodyItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServersOKBodyItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetIBAServersOKBodyItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAServersUnauthorizedBody get i b a servers unauthorized body
//
// swagger:model GetIBAServersUnauthorizedBody
type GetIBAServersUnauthorizedBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a servers unauthorized body
func (o *GetIBAServersUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a servers unauthorized body based on context it is used
func (o *GetIBAServersUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServersUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServersUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetIBAServersUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
