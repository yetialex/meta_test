// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// RegisterIBAGateOKCode is the HTTP code returned for type RegisterIBAGateOK
const RegisterIBAGateOKCode int = 200

/*RegisterIBAGateOK OK

swagger:response registerIBAGateOK
*/
type RegisterIBAGateOK struct {

	/*
	  In: Body
	*/
	Payload *RegisterIBAGateOKBody `json:"body,omitempty"`
}

// NewRegisterIBAGateOK creates RegisterIBAGateOK with default headers values
func NewRegisterIBAGateOK() *RegisterIBAGateOK {

	return &RegisterIBAGateOK{}
}

// WithPayload adds the payload to the register i b a gate o k response
func (o *RegisterIBAGateOK) WithPayload(payload *RegisterIBAGateOKBody) *RegisterIBAGateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register i b a gate o k response
func (o *RegisterIBAGateOK) SetPayload(payload *RegisterIBAGateOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterIBAGateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterIBAGateBadRequestCode is the HTTP code returned for type RegisterIBAGateBadRequest
const RegisterIBAGateBadRequestCode int = 400

/*RegisterIBAGateBadRequest Bad params supplied

swagger:response registerIBAGateBadRequest
*/
type RegisterIBAGateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *RegisterIBAGateBadRequestBody `json:"body,omitempty"`
}

// NewRegisterIBAGateBadRequest creates RegisterIBAGateBadRequest with default headers values
func NewRegisterIBAGateBadRequest() *RegisterIBAGateBadRequest {

	return &RegisterIBAGateBadRequest{}
}

// WithPayload adds the payload to the register i b a gate bad request response
func (o *RegisterIBAGateBadRequest) WithPayload(payload *RegisterIBAGateBadRequestBody) *RegisterIBAGateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register i b a gate bad request response
func (o *RegisterIBAGateBadRequest) SetPayload(payload *RegisterIBAGateBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterIBAGateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterIBAGateUnauthorizedCode is the HTTP code returned for type RegisterIBAGateUnauthorized
const RegisterIBAGateUnauthorizedCode int = 401

/*RegisterIBAGateUnauthorized Unauthorized

swagger:response registerIBAGateUnauthorized
*/
type RegisterIBAGateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *RegisterIBAGateUnauthorizedBody `json:"body,omitempty"`
}

// NewRegisterIBAGateUnauthorized creates RegisterIBAGateUnauthorized with default headers values
func NewRegisterIBAGateUnauthorized() *RegisterIBAGateUnauthorized {

	return &RegisterIBAGateUnauthorized{}
}

// WithPayload adds the payload to the register i b a gate unauthorized response
func (o *RegisterIBAGateUnauthorized) WithPayload(payload *RegisterIBAGateUnauthorizedBody) *RegisterIBAGateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register i b a gate unauthorized response
func (o *RegisterIBAGateUnauthorized) SetPayload(payload *RegisterIBAGateUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterIBAGateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterIBAGateConflictCode is the HTTP code returned for type RegisterIBAGateConflict
const RegisterIBAGateConflictCode int = 409

/*RegisterIBAGateConflict Conflict, gate already registered

swagger:response registerIBAGateConflict
*/
type RegisterIBAGateConflict struct {

	/*
	  In: Body
	*/
	Payload *RegisterIBAGateConflictBody `json:"body,omitempty"`
}

// NewRegisterIBAGateConflict creates RegisterIBAGateConflict with default headers values
func NewRegisterIBAGateConflict() *RegisterIBAGateConflict {

	return &RegisterIBAGateConflict{}
}

// WithPayload adds the payload to the register i b a gate conflict response
func (o *RegisterIBAGateConflict) WithPayload(payload *RegisterIBAGateConflictBody) *RegisterIBAGateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register i b a gate conflict response
func (o *RegisterIBAGateConflict) SetPayload(payload *RegisterIBAGateConflictBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterIBAGateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
