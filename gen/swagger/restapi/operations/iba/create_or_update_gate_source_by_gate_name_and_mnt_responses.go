// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/yetialex/meta_test/gen/swagger/models"
)

// CreateOrUpdateGateSourceByGateNameAndMntOKCode is the HTTP code returned for type CreateOrUpdateGateSourceByGateNameAndMntOK
const CreateOrUpdateGateSourceByGateNameAndMntOKCode int = 200

/*CreateOrUpdateGateSourceByGateNameAndMntOK OK

swagger:response createOrUpdateGateSourceByGateNameAndMntOK
*/
type CreateOrUpdateGateSourceByGateNameAndMntOK struct {

	/*
	  In: Body
	*/
	Payload *models.IBAGateSource `json:"body,omitempty"`
}

// NewCreateOrUpdateGateSourceByGateNameAndMntOK creates CreateOrUpdateGateSourceByGateNameAndMntOK with default headers values
func NewCreateOrUpdateGateSourceByGateNameAndMntOK() *CreateOrUpdateGateSourceByGateNameAndMntOK {

	return &CreateOrUpdateGateSourceByGateNameAndMntOK{}
}

// WithPayload adds the payload to the create or update gate source by gate name and mnt o k response
func (o *CreateOrUpdateGateSourceByGateNameAndMntOK) WithPayload(payload *models.IBAGateSource) *CreateOrUpdateGateSourceByGateNameAndMntOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update gate source by gate name and mnt o k response
func (o *CreateOrUpdateGateSourceByGateNameAndMntOK) SetPayload(payload *models.IBAGateSource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateGateSourceByGateNameAndMntOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrUpdateGateSourceByGateNameAndMntBadRequestCode is the HTTP code returned for type CreateOrUpdateGateSourceByGateNameAndMntBadRequest
const CreateOrUpdateGateSourceByGateNameAndMntBadRequestCode int = 400

/*CreateOrUpdateGateSourceByGateNameAndMntBadRequest Bad params supplied

swagger:response createOrUpdateGateSourceByGateNameAndMntBadRequest
*/
type CreateOrUpdateGateSourceByGateNameAndMntBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateOrUpdateGateSourceByGateNameAndMntBadRequest creates CreateOrUpdateGateSourceByGateNameAndMntBadRequest with default headers values
func NewCreateOrUpdateGateSourceByGateNameAndMntBadRequest() *CreateOrUpdateGateSourceByGateNameAndMntBadRequest {

	return &CreateOrUpdateGateSourceByGateNameAndMntBadRequest{}
}

// WithPayload adds the payload to the create or update gate source by gate name and mnt bad request response
func (o *CreateOrUpdateGateSourceByGateNameAndMntBadRequest) WithPayload(payload *models.ErrorResponse) *CreateOrUpdateGateSourceByGateNameAndMntBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update gate source by gate name and mnt bad request response
func (o *CreateOrUpdateGateSourceByGateNameAndMntBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateGateSourceByGateNameAndMntBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrUpdateGateSourceByGateNameAndMntUnauthorizedCode is the HTTP code returned for type CreateOrUpdateGateSourceByGateNameAndMntUnauthorized
const CreateOrUpdateGateSourceByGateNameAndMntUnauthorizedCode int = 401

/*CreateOrUpdateGateSourceByGateNameAndMntUnauthorized Unauthorized

swagger:response createOrUpdateGateSourceByGateNameAndMntUnauthorized
*/
type CreateOrUpdateGateSourceByGateNameAndMntUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateOrUpdateGateSourceByGateNameAndMntUnauthorized creates CreateOrUpdateGateSourceByGateNameAndMntUnauthorized with default headers values
func NewCreateOrUpdateGateSourceByGateNameAndMntUnauthorized() *CreateOrUpdateGateSourceByGateNameAndMntUnauthorized {

	return &CreateOrUpdateGateSourceByGateNameAndMntUnauthorized{}
}

// WithPayload adds the payload to the create or update gate source by gate name and mnt unauthorized response
func (o *CreateOrUpdateGateSourceByGateNameAndMntUnauthorized) WithPayload(payload *models.ErrorResponse) *CreateOrUpdateGateSourceByGateNameAndMntUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update gate source by gate name and mnt unauthorized response
func (o *CreateOrUpdateGateSourceByGateNameAndMntUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateGateSourceByGateNameAndMntUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrUpdateGateSourceByGateNameAndMntNotFoundCode is the HTTP code returned for type CreateOrUpdateGateSourceByGateNameAndMntNotFound
const CreateOrUpdateGateSourceByGateNameAndMntNotFoundCode int = 404

/*CreateOrUpdateGateSourceByGateNameAndMntNotFound Not found

swagger:response createOrUpdateGateSourceByGateNameAndMntNotFound
*/
type CreateOrUpdateGateSourceByGateNameAndMntNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateOrUpdateGateSourceByGateNameAndMntNotFound creates CreateOrUpdateGateSourceByGateNameAndMntNotFound with default headers values
func NewCreateOrUpdateGateSourceByGateNameAndMntNotFound() *CreateOrUpdateGateSourceByGateNameAndMntNotFound {

	return &CreateOrUpdateGateSourceByGateNameAndMntNotFound{}
}

// WithPayload adds the payload to the create or update gate source by gate name and mnt not found response
func (o *CreateOrUpdateGateSourceByGateNameAndMntNotFound) WithPayload(payload *models.ErrorResponse) *CreateOrUpdateGateSourceByGateNameAndMntNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update gate source by gate name and mnt not found response
func (o *CreateOrUpdateGateSourceByGateNameAndMntNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateGateSourceByGateNameAndMntNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
