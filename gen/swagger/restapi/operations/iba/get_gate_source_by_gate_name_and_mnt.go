// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetGateSourceByGateNameAndMntHandlerFunc turns a function with the right signature into a get gate source by gate name and mnt handler
type GetGateSourceByGateNameAndMntHandlerFunc func(GetGateSourceByGateNameAndMntParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetGateSourceByGateNameAndMntHandlerFunc) Handle(params GetGateSourceByGateNameAndMntParams) middleware.Responder {
	return fn(params)
}

// GetGateSourceByGateNameAndMntHandler interface for that can handle valid get gate source by gate name and mnt params
type GetGateSourceByGateNameAndMntHandler interface {
	Handle(GetGateSourceByGateNameAndMntParams) middleware.Responder
}

// NewGetGateSourceByGateNameAndMnt creates a new http.Handler for the get gate source by gate name and mnt operation
func NewGetGateSourceByGateNameAndMnt(ctx *middleware.Context, handler GetGateSourceByGateNameAndMntHandler) *GetGateSourceByGateNameAndMnt {
	return &GetGateSourceByGateNameAndMnt{Context: ctx, Handler: handler}
}

/* GetGateSourceByGateNameAndMnt swagger:route GET /ibas/gates/{gate_name}/mnts/{mnt} iba getGateSourceByGateNameAndMnt

Get source by IBA Gate name and mnt

*/
type GetGateSourceByGateNameAndMnt struct {
	Context *middleware.Context
	Handler GetGateSourceByGateNameAndMntHandler
}

func (o *GetGateSourceByGateNameAndMnt) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetGateSourceByGateNameAndMntParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
