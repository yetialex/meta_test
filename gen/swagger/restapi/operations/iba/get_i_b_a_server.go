// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetIBAServerHandlerFunc turns a function with the right signature into a get i b a server handler
type GetIBAServerHandlerFunc func(GetIBAServerParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIBAServerHandlerFunc) Handle(params GetIBAServerParams) middleware.Responder {
	return fn(params)
}

// GetIBAServerHandler interface for that can handle valid get i b a server params
type GetIBAServerHandler interface {
	Handle(GetIBAServerParams) middleware.Responder
}

// NewGetIBAServer creates a new http.Handler for the get i b a server operation
func NewGetIBAServer(ctx *middleware.Context, handler GetIBAServerHandler) *GetIBAServer {
	return &GetIBAServer{Context: ctx, Handler: handler}
}

/* GetIBAServer swagger:route GET /ibas/servers/{iba_server_id} iba getIBAServer

Get IBA Server by id

*/
type GetIBAServer struct {
	Context *middleware.Context
	Handler GetIBAServerHandler
}

func (o *GetIBAServer) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetIBAServerParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
