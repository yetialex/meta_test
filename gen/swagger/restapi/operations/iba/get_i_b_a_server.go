// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetIBAServerHandlerFunc turns a function with the right signature into a get i b a server handler
type GetIBAServerHandlerFunc func(GetIBAServerParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIBAServerHandlerFunc) Handle(params GetIBAServerParams) middleware.Responder {
	return fn(params)
}

// GetIBAServerHandler interface for that can handle valid get i b a server params
type GetIBAServerHandler interface {
	Handle(GetIBAServerParams) middleware.Responder
}

// NewGetIBAServer creates a new http.Handler for the get i b a server operation
func NewGetIBAServer(ctx *middleware.Context, handler GetIBAServerHandler) *GetIBAServer {
	return &GetIBAServer{Context: ctx, Handler: handler}
}

/* GetIBAServer swagger:route GET /ibas/servers/${iba_server_id} iba getIBAServer

Get IBA Server by id

*/
type GetIBAServer struct {
	Context *middleware.Context
	Handler GetIBAServerHandler
}

func (o *GetIBAServer) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetIBAServerParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetIBAServerBadRequestBody get i b a server bad request body
//
// swagger:model GetIBAServerBadRequestBody
type GetIBAServerBadRequestBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a server bad request body
func (o *GetIBAServerBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a server bad request body based on context it is used
func (o *GetIBAServerBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServerBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServerBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetIBAServerBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAServerNotFoundBody get i b a server not found body
//
// swagger:model GetIBAServerNotFoundBody
type GetIBAServerNotFoundBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a server not found body
func (o *GetIBAServerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a server not found body based on context it is used
func (o *GetIBAServerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetIBAServerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAServerOKBody get i b a server o k body
//
// swagger:model GetIBAServerOKBody
type GetIBAServerOKBody struct {

	// Комментарий
	// Example: Some notes
	Comment string `json:"comment,omitempty"`

	// IBA сервер ID
	// Example: 1
	// Required: true
	ID *int64 `json:"id"`

	// Имя IBA Server
	// Example: iba-server-name.nlmk
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this get i b a server o k body
func (o *GetIBAServerOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIBAServerOKBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("getIBAServerOK"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *GetIBAServerOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getIBAServerOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get i b a server o k body based on context it is used
func (o *GetIBAServerOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServerOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServerOKBody) UnmarshalBinary(b []byte) error {
	var res GetIBAServerOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetIBAServerUnauthorizedBody get i b a server unauthorized body
//
// swagger:model GetIBAServerUnauthorizedBody
type GetIBAServerUnauthorizedBody struct {

	// code
	// Example: 300
	Code int64 `json:"code,omitempty"`

	// message
	// Example: Something bad happens.
	Message string `json:"message,omitempty"`
}

// Validate validates this get i b a server unauthorized body
func (o *GetIBAServerUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get i b a server unauthorized body based on context it is used
func (o *GetIBAServerUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIBAServerUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIBAServerUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetIBAServerUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
