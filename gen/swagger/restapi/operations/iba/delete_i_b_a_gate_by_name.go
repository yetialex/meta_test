// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteIBAGateByNameHandlerFunc turns a function with the right signature into a delete i b a gate by name handler
type DeleteIBAGateByNameHandlerFunc func(DeleteIBAGateByNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteIBAGateByNameHandlerFunc) Handle(params DeleteIBAGateByNameParams) middleware.Responder {
	return fn(params)
}

// DeleteIBAGateByNameHandler interface for that can handle valid delete i b a gate by name params
type DeleteIBAGateByNameHandler interface {
	Handle(DeleteIBAGateByNameParams) middleware.Responder
}

// NewDeleteIBAGateByName creates a new http.Handler for the delete i b a gate by name operation
func NewDeleteIBAGateByName(ctx *middleware.Context, handler DeleteIBAGateByNameHandler) *DeleteIBAGateByName {
	return &DeleteIBAGateByName{Context: ctx, Handler: handler}
}

/* DeleteIBAGateByName swagger:route DELETE /ibas/gates/{gate_name} iba deleteIBAGateByName

Delete IBA Gate by name

*/
type DeleteIBAGateByName struct {
	Context *middleware.Context
	Handler DeleteIBAGateByNameHandler
}

func (o *DeleteIBAGateByName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteIBAGateByNameParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
