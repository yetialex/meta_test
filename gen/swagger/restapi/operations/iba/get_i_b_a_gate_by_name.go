// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetIBAGateByNameHandlerFunc turns a function with the right signature into a get i b a gate by name handler
type GetIBAGateByNameHandlerFunc func(GetIBAGateByNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIBAGateByNameHandlerFunc) Handle(params GetIBAGateByNameParams) middleware.Responder {
	return fn(params)
}

// GetIBAGateByNameHandler interface for that can handle valid get i b a gate by name params
type GetIBAGateByNameHandler interface {
	Handle(GetIBAGateByNameParams) middleware.Responder
}

// NewGetIBAGateByName creates a new http.Handler for the get i b a gate by name operation
func NewGetIBAGateByName(ctx *middleware.Context, handler GetIBAGateByNameHandler) *GetIBAGateByName {
	return &GetIBAGateByName{Context: ctx, Handler: handler}
}

/* GetIBAGateByName swagger:route GET /ibas/gates/{gate_name} iba getIBAGateByName

Get IBA Gate by name

*/
type GetIBAGateByName struct {
	Context *middleware.Context
	Handler GetIBAGateByNameHandler
}

func (o *GetIBAGateByName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetIBAGateByNameParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
