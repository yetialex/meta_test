// Code generated by go-swagger; DO NOT EDIT.

package iba

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/yetialex/meta_test/gen/swagger/models"
)

// RegisterIBAServerOKCode is the HTTP code returned for type RegisterIBAServerOK
const RegisterIBAServerOKCode int = 200

/*RegisterIBAServerOK OK

swagger:response registerIBAServerOK
*/
type RegisterIBAServerOK struct {

	/*
	  In: Body
	*/
	Payload *models.IBAServer `json:"body,omitempty"`
}

// NewRegisterIBAServerOK creates RegisterIBAServerOK with default headers values
func NewRegisterIBAServerOK() *RegisterIBAServerOK {

	return &RegisterIBAServerOK{}
}

// WithPayload adds the payload to the register i b a server o k response
func (o *RegisterIBAServerOK) WithPayload(payload *models.IBAServer) *RegisterIBAServerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register i b a server o k response
func (o *RegisterIBAServerOK) SetPayload(payload *models.IBAServer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterIBAServerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterIBAServerBadRequestCode is the HTTP code returned for type RegisterIBAServerBadRequest
const RegisterIBAServerBadRequestCode int = 400

/*RegisterIBAServerBadRequest Bad params supplied

swagger:response registerIBAServerBadRequest
*/
type RegisterIBAServerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRegisterIBAServerBadRequest creates RegisterIBAServerBadRequest with default headers values
func NewRegisterIBAServerBadRequest() *RegisterIBAServerBadRequest {

	return &RegisterIBAServerBadRequest{}
}

// WithPayload adds the payload to the register i b a server bad request response
func (o *RegisterIBAServerBadRequest) WithPayload(payload *models.ErrorResponse) *RegisterIBAServerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register i b a server bad request response
func (o *RegisterIBAServerBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterIBAServerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterIBAServerUnauthorizedCode is the HTTP code returned for type RegisterIBAServerUnauthorized
const RegisterIBAServerUnauthorizedCode int = 401

/*RegisterIBAServerUnauthorized Unauthorized

swagger:response registerIBAServerUnauthorized
*/
type RegisterIBAServerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRegisterIBAServerUnauthorized creates RegisterIBAServerUnauthorized with default headers values
func NewRegisterIBAServerUnauthorized() *RegisterIBAServerUnauthorized {

	return &RegisterIBAServerUnauthorized{}
}

// WithPayload adds the payload to the register i b a server unauthorized response
func (o *RegisterIBAServerUnauthorized) WithPayload(payload *models.ErrorResponse) *RegisterIBAServerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register i b a server unauthorized response
func (o *RegisterIBAServerUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterIBAServerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterIBAServerConflictCode is the HTTP code returned for type RegisterIBAServerConflict
const RegisterIBAServerConflictCode int = 409

/*RegisterIBAServerConflict Conflict, server already registered

swagger:response registerIBAServerConflict
*/
type RegisterIBAServerConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRegisterIBAServerConflict creates RegisterIBAServerConflict with default headers values
func NewRegisterIBAServerConflict() *RegisterIBAServerConflict {

	return &RegisterIBAServerConflict{}
}

// WithPayload adds the payload to the register i b a server conflict response
func (o *RegisterIBAServerConflict) WithPayload(payload *models.ErrorResponse) *RegisterIBAServerConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register i b a server conflict response
func (o *RegisterIBAServerConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterIBAServerConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
