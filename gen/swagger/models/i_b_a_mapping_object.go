// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IBAMappingObject i b a mapping object
//
// swagger:model iBAMappingObject
type IBAMappingObject struct {

	// is digital
	// Example: true
	// Required: true
	IsDigital *bool `json:"is_digital"`

	// module number
	// Example: 1
	// Required: true
	ModuleNumber *int64 `json:"module_number"`

	// number in module
	// Example: 102
	// Required: true
	NumberInModule *int64 `json:"number_in_module"`

	// storage id
	// Example: 1
	// Required: true
	StorageID *int64 `json:"storage_id"`
}

// Validate validates this i b a mapping object
func (m *IBAMappingObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsDigital(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModuleNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumberInModule(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStorageID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IBAMappingObject) validateIsDigital(formats strfmt.Registry) error {

	if err := validate.Required("is_digital", "body", m.IsDigital); err != nil {
		return err
	}

	return nil
}

func (m *IBAMappingObject) validateModuleNumber(formats strfmt.Registry) error {

	if err := validate.Required("module_number", "body", m.ModuleNumber); err != nil {
		return err
	}

	return nil
}

func (m *IBAMappingObject) validateNumberInModule(formats strfmt.Registry) error {

	if err := validate.Required("number_in_module", "body", m.NumberInModule); err != nil {
		return err
	}

	return nil
}

func (m *IBAMappingObject) validateStorageID(formats strfmt.Registry) error {

	if err := validate.Required("storage_id", "body", m.StorageID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this i b a mapping object based on context it is used
func (m *IBAMappingObject) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IBAMappingObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IBAMappingObject) UnmarshalBinary(b []byte) error {
	var res IBAMappingObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
