// Code generated by dbml-gen-go-model. DO NOT EDIT.
// Supported by duythinht@2020
package records

import "github.com/go-openapi/strfmt"

// Signal is generated type for table 'signals'
type Signal struct {
	ID          int64           `db:"id" json:"id" mapstructure:"id"`
	ValueTypeID int             `db:"value_type_id" json:"value_type_id" mapstructure:"value_type_id"`
	ClassID     int             `db:"class_id" json:"class_id" mapstructure:"class_id"`
	StatusID    int             `db:"status_id" json:"status_id" mapstructure:"status_id"`
	SourcesID   int64           `db:"sources_id" json:"sources_id" mapstructure:"sources_id"`
	CreatedAt   strfmt.DateTime `db:"created_at" json:"created_at" mapstructure:"created_at"`
	UpdatedAt   strfmt.DateTime `db:"updated_at" json:"updated_at" mapstructure:"updated_at"`
	// acl
	ACL map[string]interface{} `db:"acl" json:"acl" mapstructure:"acl"`
}

// table 'signals' columns list struct
type __tbl_signals_columns struct {
	ID          string
	ValueTypeID string
	ClassID     string
	StatusID    string
	SourcesID   string
	CreatedAt   string
	UpdatedAt   string
	ACL         string
}

// table 'signals' metadata struct
type __tbl_signals struct {
	Name    string
	Columns __tbl_signals_columns
}

// table 'signals' metadata info
var _tbl_signals = __tbl_signals{
	Columns: __tbl_signals_columns{
		ACL:         "acl",
		ClassID:     "class_id",
		CreatedAt:   "created_at",
		ID:          "id",
		SourcesID:   "sources_id",
		StatusID:    "status_id",
		UpdatedAt:   "updated_at",
		ValueTypeID: "value_type_id",
	},
	Name: "signals",
}

// GetColumns return list columns name for table 'signals'
func (*__tbl_signals) GetColumns() []string {
	return []string{"id", "value_type_id", "class_id", "status_id", "sources_id", "created_at", "updated_at", "acl"}
}

// T return metadata info for table 'signals'
func (*Signal) T() *__tbl_signals {
	return &_tbl_signals
}
